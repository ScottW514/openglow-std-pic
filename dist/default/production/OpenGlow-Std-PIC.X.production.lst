

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Apr  4 23:28:10 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1713
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 1.45
    26                           ; Generated 16/11/2017 GMT
    27                           ; 
    28                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F1713 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0090                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0095                     	;# 
    95  0096                     	;# 
    96  0097                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009A                     	;# 
   100  009B                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  0111                     	;# 
   110  0112                     	;# 
   111  0113                     	;# 
   112  0114                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0117                     	;# 
   116  0118                     	;# 
   117  0119                     	;# 
   118  011A                     	;# 
   119  011B                     	;# 
   120  011B                     	;# 
   121  011C                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  018E                     	;# 
   125  0191                     	;# 
   126  0191                     	;# 
   127  0192                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0194                     	;# 
   131  0195                     	;# 
   132  0196                     	;# 
   133  0197                     	;# 
   134  0199                     	;# 
   135  0199                     	;# 
   136  0199                     	;# 
   137  019A                     	;# 
   138  019A                     	;# 
   139  019A                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019C                     	;# 
   146  019C                     	;# 
   147  019C                     	;# 
   148  019D                     	;# 
   149  019D                     	;# 
   150  019D                     	;# 
   151  019E                     	;# 
   152  019E                     	;# 
   153  019E                     	;# 
   154  019F                     	;# 
   155  019F                     	;# 
   156  019F                     	;# 
   157  019F                     	;# 
   158  019F                     	;# 
   159  020C                     	;# 
   160  020D                     	;# 
   161  020E                     	;# 
   162  0210                     	;# 
   163  0211                     	;# 
   164  0211                     	;# 
   165  0212                     	;# 
   166  0212                     	;# 
   167  0213                     	;# 
   168  0213                     	;# 
   169  0214                     	;# 
   170  0214                     	;# 
   171  0215                     	;# 
   172  0215                     	;# 
   173  0215                     	;# 
   174  0215                     	;# 
   175  0216                     	;# 
   176  0216                     	;# 
   177  0217                     	;# 
   178  0217                     	;# 
   179  028C                     	;# 
   180  028D                     	;# 
   181  028E                     	;# 
   182  0291                     	;# 
   183  0291                     	;# 
   184  0292                     	;# 
   185  0293                     	;# 
   186  0293                     	;# 
   187  0298                     	;# 
   188  0298                     	;# 
   189  0299                     	;# 
   190  029A                     	;# 
   191  029A                     	;# 
   192  029E                     	;# 
   193  030C                     	;# 
   194  030D                     	;# 
   195  030E                     	;# 
   196  038C                     	;# 
   197  038D                     	;# 
   198  038E                     	;# 
   199  0390                     	;# 
   200  0391                     	;# 
   201  0392                     	;# 
   202  0393                     	;# 
   203  0394                     	;# 
   204  0395                     	;# 
   205  0396                     	;# 
   206  0397                     	;# 
   207  0398                     	;# 
   208  0399                     	;# 
   209  039D                     	;# 
   210  039E                     	;# 
   211  039F                     	;# 
   212  0415                     	;# 
   213  0416                     	;# 
   214  0417                     	;# 
   215  041C                     	;# 
   216  041D                     	;# 
   217  041E                     	;# 
   218  0498                     	;# 
   219  0498                     	;# 
   220  0499                     	;# 
   221  049A                     	;# 
   222  049B                     	;# 
   223  049B                     	;# 
   224  049C                     	;# 
   225  049D                     	;# 
   226  049E                     	;# 
   227  049F                     	;# 
   228  0511                     	;# 
   229  0515                     	;# 
   230  0617                     	;# 
   231  0618                     	;# 
   232  0619                     	;# 
   233  0619                     	;# 
   234  061A                     	;# 
   235  061B                     	;# 
   236  061C                     	;# 
   237  061C                     	;# 
   238  0691                     	;# 
   239  0692                     	;# 
   240  0693                     	;# 
   241  0694                     	;# 
   242  0695                     	;# 
   243  0696                     	;# 
   244  0697                     	;# 
   245  0698                     	;# 
   246  0699                     	;# 
   247  069A                     	;# 
   248  069B                     	;# 
   249  069C                     	;# 
   250  069D                     	;# 
   251  069E                     	;# 
   252  069F                     	;# 
   253  0E0F                     	;# 
   254  0E10                     	;# 
   255  0E11                     	;# 
   256  0E12                     	;# 
   257  0E13                     	;# 
   258  0E14                     	;# 
   259  0E15                     	;# 
   260  0E17                     	;# 
   261  0E20                     	;# 
   262  0E21                     	;# 
   263  0E22                     	;# 
   264  0E24                     	;# 
   265  0E25                     	;# 
   266  0E28                     	;# 
   267  0E29                     	;# 
   268  0E2A                     	;# 
   269  0E2B                     	;# 
   270  0E90                     	;# 
   271  0E91                     	;# 
   272  0E92                     	;# 
   273  0E93                     	;# 
   274  0E94                     	;# 
   275  0E95                     	;# 
   276  0E96                     	;# 
   277  0E97                     	;# 
   278  0E98                     	;# 
   279  0E99                     	;# 
   280  0E9A                     	;# 
   281  0E9B                     	;# 
   282  0E9C                     	;# 
   283  0E9D                     	;# 
   284  0E9E                     	;# 
   285  0E9F                     	;# 
   286  0EA0                     	;# 
   287  0EA1                     	;# 
   288  0EA2                     	;# 
   289  0EA3                     	;# 
   290  0EA4                     	;# 
   291  0EA5                     	;# 
   292  0EA6                     	;# 
   293  0EA7                     	;# 
   294  0F0F                     	;# 
   295  0F10                     	;# 
   296  0F11                     	;# 
   297  0F12                     	;# 
   298  0F13                     	;# 
   299  0F14                     	;# 
   300  0F15                     	;# 
   301  0F16                     	;# 
   302  0F17                     	;# 
   303  0F18                     	;# 
   304  0F19                     	;# 
   305  0F1A                     	;# 
   306  0F1B                     	;# 
   307  0F1C                     	;# 
   308  0F1D                     	;# 
   309  0F1E                     	;# 
   310  0F1F                     	;# 
   311  0F20                     	;# 
   312  0F21                     	;# 
   313  0F22                     	;# 
   314  0F23                     	;# 
   315  0F24                     	;# 
   316  0F25                     	;# 
   317  0F26                     	;# 
   318  0F27                     	;# 
   319  0F28                     	;# 
   320  0F29                     	;# 
   321  0F2A                     	;# 
   322  0F2B                     	;# 
   323  0F2C                     	;# 
   324  0F2D                     	;# 
   325  0F2E                     	;# 
   326  0F2F                     	;# 
   327  0F30                     	;# 
   328  0F31                     	;# 
   329  0F32                     	;# 
   330  0F33                     	;# 
   331  0F34                     	;# 
   332  0F35                     	;# 
   333  0F36                     	;# 
   334  0F37                     	;# 
   335  0FE4                     	;# 
   336  0FE5                     	;# 
   337  0FE6                     	;# 
   338  0FE7                     	;# 
   339  0FE8                     	;# 
   340  0FE9                     	;# 
   341  0FEA                     	;# 
   342  0FEB                     	;# 
   343  0FED                     	;# 
   344  0FEE                     	;# 
   345  0FEF                     	;# 
   346  0000                     	;# 
   347  0001                     	;# 
   348  0002                     	;# 
   349  0003                     	;# 
   350  0004                     	;# 
   351  0005                     	;# 
   352  0006                     	;# 
   353  0007                     	;# 
   354  0008                     	;# 
   355  0009                     	;# 
   356  000A                     	;# 
   357  000B                     	;# 
   358  000C                     	;# 
   359  000D                     	;# 
   360  000E                     	;# 
   361  0010                     	;# 
   362  0011                     	;# 
   363  0012                     	;# 
   364  0013                     	;# 
   365  0015                     	;# 
   366  0016                     	;# 
   367  0016                     	;# 
   368  0017                     	;# 
   369  0018                     	;# 
   370  0019                     	;# 
   371  001A                     	;# 
   372  001B                     	;# 
   373  001C                     	;# 
   374  008C                     	;# 
   375  008D                     	;# 
   376  008E                     	;# 
   377  0090                     	;# 
   378  0091                     	;# 
   379  0092                     	;# 
   380  0093                     	;# 
   381  0095                     	;# 
   382  0096                     	;# 
   383  0097                     	;# 
   384  0098                     	;# 
   385  0099                     	;# 
   386  009A                     	;# 
   387  009B                     	;# 
   388  009B                     	;# 
   389  009C                     	;# 
   390  009D                     	;# 
   391  009E                     	;# 
   392  009F                     	;# 
   393  010C                     	;# 
   394  010D                     	;# 
   395  010E                     	;# 
   396  0111                     	;# 
   397  0112                     	;# 
   398  0113                     	;# 
   399  0114                     	;# 
   400  0115                     	;# 
   401  0116                     	;# 
   402  0117                     	;# 
   403  0118                     	;# 
   404  0119                     	;# 
   405  011A                     	;# 
   406  011B                     	;# 
   407  011B                     	;# 
   408  011C                     	;# 
   409  018C                     	;# 
   410  018D                     	;# 
   411  018E                     	;# 
   412  0191                     	;# 
   413  0191                     	;# 
   414  0192                     	;# 
   415  0193                     	;# 
   416  0193                     	;# 
   417  0194                     	;# 
   418  0195                     	;# 
   419  0196                     	;# 
   420  0197                     	;# 
   421  0199                     	;# 
   422  0199                     	;# 
   423  0199                     	;# 
   424  019A                     	;# 
   425  019A                     	;# 
   426  019A                     	;# 
   427  019B                     	;# 
   428  019B                     	;# 
   429  019B                     	;# 
   430  019B                     	;# 
   431  019B                     	;# 
   432  019C                     	;# 
   433  019C                     	;# 
   434  019C                     	;# 
   435  019D                     	;# 
   436  019D                     	;# 
   437  019D                     	;# 
   438  019E                     	;# 
   439  019E                     	;# 
   440  019E                     	;# 
   441  019F                     	;# 
   442  019F                     	;# 
   443  019F                     	;# 
   444  019F                     	;# 
   445  019F                     	;# 
   446  020C                     	;# 
   447  020D                     	;# 
   448  020E                     	;# 
   449  0210                     	;# 
   450  0211                     	;# 
   451  0211                     	;# 
   452  0212                     	;# 
   453  0212                     	;# 
   454  0213                     	;# 
   455  0213                     	;# 
   456  0214                     	;# 
   457  0214                     	;# 
   458  0215                     	;# 
   459  0215                     	;# 
   460  0215                     	;# 
   461  0215                     	;# 
   462  0216                     	;# 
   463  0216                     	;# 
   464  0217                     	;# 
   465  0217                     	;# 
   466  028C                     	;# 
   467  028D                     	;# 
   468  028E                     	;# 
   469  0291                     	;# 
   470  0291                     	;# 
   471  0292                     	;# 
   472  0293                     	;# 
   473  0293                     	;# 
   474  0298                     	;# 
   475  0298                     	;# 
   476  0299                     	;# 
   477  029A                     	;# 
   478  029A                     	;# 
   479  029E                     	;# 
   480  030C                     	;# 
   481  030D                     	;# 
   482  030E                     	;# 
   483  038C                     	;# 
   484  038D                     	;# 
   485  038E                     	;# 
   486  0390                     	;# 
   487  0391                     	;# 
   488  0392                     	;# 
   489  0393                     	;# 
   490  0394                     	;# 
   491  0395                     	;# 
   492  0396                     	;# 
   493  0397                     	;# 
   494  0398                     	;# 
   495  0399                     	;# 
   496  039D                     	;# 
   497  039E                     	;# 
   498  039F                     	;# 
   499  0415                     	;# 
   500  0416                     	;# 
   501  0417                     	;# 
   502  041C                     	;# 
   503  041D                     	;# 
   504  041E                     	;# 
   505  0498                     	;# 
   506  0498                     	;# 
   507  0499                     	;# 
   508  049A                     	;# 
   509  049B                     	;# 
   510  049B                     	;# 
   511  049C                     	;# 
   512  049D                     	;# 
   513  049E                     	;# 
   514  049F                     	;# 
   515  0511                     	;# 
   516  0515                     	;# 
   517  0617                     	;# 
   518  0618                     	;# 
   519  0619                     	;# 
   520  0619                     	;# 
   521  061A                     	;# 
   522  061B                     	;# 
   523  061C                     	;# 
   524  061C                     	;# 
   525  0691                     	;# 
   526  0692                     	;# 
   527  0693                     	;# 
   528  0694                     	;# 
   529  0695                     	;# 
   530  0696                     	;# 
   531  0697                     	;# 
   532  0698                     	;# 
   533  0699                     	;# 
   534  069A                     	;# 
   535  069B                     	;# 
   536  069C                     	;# 
   537  069D                     	;# 
   538  069E                     	;# 
   539  069F                     	;# 
   540  0E0F                     	;# 
   541  0E10                     	;# 
   542  0E11                     	;# 
   543  0E12                     	;# 
   544  0E13                     	;# 
   545  0E14                     	;# 
   546  0E15                     	;# 
   547  0E17                     	;# 
   548  0E20                     	;# 
   549  0E21                     	;# 
   550  0E22                     	;# 
   551  0E24                     	;# 
   552  0E25                     	;# 
   553  0E28                     	;# 
   554  0E29                     	;# 
   555  0E2A                     	;# 
   556  0E2B                     	;# 
   557  0E90                     	;# 
   558  0E91                     	;# 
   559  0E92                     	;# 
   560  0E93                     	;# 
   561  0E94                     	;# 
   562  0E95                     	;# 
   563  0E96                     	;# 
   564  0E97                     	;# 
   565  0E98                     	;# 
   566  0E99                     	;# 
   567  0E9A                     	;# 
   568  0E9B                     	;# 
   569  0E9C                     	;# 
   570  0E9D                     	;# 
   571  0E9E                     	;# 
   572  0E9F                     	;# 
   573  0EA0                     	;# 
   574  0EA1                     	;# 
   575  0EA2                     	;# 
   576  0EA3                     	;# 
   577  0EA4                     	;# 
   578  0EA5                     	;# 
   579  0EA6                     	;# 
   580  0EA7                     	;# 
   581  0F0F                     	;# 
   582  0F10                     	;# 
   583  0F11                     	;# 
   584  0F12                     	;# 
   585  0F13                     	;# 
   586  0F14                     	;# 
   587  0F15                     	;# 
   588  0F16                     	;# 
   589  0F17                     	;# 
   590  0F18                     	;# 
   591  0F19                     	;# 
   592  0F1A                     	;# 
   593  0F1B                     	;# 
   594  0F1C                     	;# 
   595  0F1D                     	;# 
   596  0F1E                     	;# 
   597  0F1F                     	;# 
   598  0F20                     	;# 
   599  0F21                     	;# 
   600  0F22                     	;# 
   601  0F23                     	;# 
   602  0F24                     	;# 
   603  0F25                     	;# 
   604  0F26                     	;# 
   605  0F27                     	;# 
   606  0F28                     	;# 
   607  0F29                     	;# 
   608  0F2A                     	;# 
   609  0F2B                     	;# 
   610  0F2C                     	;# 
   611  0F2D                     	;# 
   612  0F2E                     	;# 
   613  0F2F                     	;# 
   614  0F30                     	;# 
   615  0F31                     	;# 
   616  0F32                     	;# 
   617  0F33                     	;# 
   618  0F34                     	;# 
   619  0F35                     	;# 
   620  0F36                     	;# 
   621  0F37                     	;# 
   622  0FE4                     	;# 
   623  0FE5                     	;# 
   624  0FE6                     	;# 
   625  0FE7                     	;# 
   626  0FE8                     	;# 
   627  0FE9                     	;# 
   628  0FEA                     	;# 
   629  0FEB                     	;# 
   630  0FED                     	;# 
   631  0FEE                     	;# 
   632  0FEF                     	;# 
   633  0000                     	;# 
   634  0001                     	;# 
   635  0002                     	;# 
   636  0003                     	;# 
   637  0004                     	;# 
   638  0005                     	;# 
   639  0006                     	;# 
   640  0007                     	;# 
   641  0008                     	;# 
   642  0009                     	;# 
   643  000A                     	;# 
   644  000B                     	;# 
   645  000C                     	;# 
   646  000D                     	;# 
   647  000E                     	;# 
   648  0010                     	;# 
   649  0011                     	;# 
   650  0012                     	;# 
   651  0013                     	;# 
   652  0015                     	;# 
   653  0016                     	;# 
   654  0016                     	;# 
   655  0017                     	;# 
   656  0018                     	;# 
   657  0019                     	;# 
   658  001A                     	;# 
   659  001B                     	;# 
   660  001C                     	;# 
   661  008C                     	;# 
   662  008D                     	;# 
   663  008E                     	;# 
   664  0090                     	;# 
   665  0091                     	;# 
   666  0092                     	;# 
   667  0093                     	;# 
   668  0095                     	;# 
   669  0096                     	;# 
   670  0097                     	;# 
   671  0098                     	;# 
   672  0099                     	;# 
   673  009A                     	;# 
   674  009B                     	;# 
   675  009B                     	;# 
   676  009C                     	;# 
   677  009D                     	;# 
   678  009E                     	;# 
   679  009F                     	;# 
   680  010C                     	;# 
   681  010D                     	;# 
   682  010E                     	;# 
   683  0111                     	;# 
   684  0112                     	;# 
   685  0113                     	;# 
   686  0114                     	;# 
   687  0115                     	;# 
   688  0116                     	;# 
   689  0117                     	;# 
   690  0118                     	;# 
   691  0119                     	;# 
   692  011A                     	;# 
   693  011B                     	;# 
   694  011B                     	;# 
   695  011C                     	;# 
   696  018C                     	;# 
   697  018D                     	;# 
   698  018E                     	;# 
   699  0191                     	;# 
   700  0191                     	;# 
   701  0192                     	;# 
   702  0193                     	;# 
   703  0193                     	;# 
   704  0194                     	;# 
   705  0195                     	;# 
   706  0196                     	;# 
   707  0197                     	;# 
   708  0199                     	;# 
   709  0199                     	;# 
   710  0199                     	;# 
   711  019A                     	;# 
   712  019A                     	;# 
   713  019A                     	;# 
   714  019B                     	;# 
   715  019B                     	;# 
   716  019B                     	;# 
   717  019B                     	;# 
   718  019B                     	;# 
   719  019C                     	;# 
   720  019C                     	;# 
   721  019C                     	;# 
   722  019D                     	;# 
   723  019D                     	;# 
   724  019D                     	;# 
   725  019E                     	;# 
   726  019E                     	;# 
   727  019E                     	;# 
   728  019F                     	;# 
   729  019F                     	;# 
   730  019F                     	;# 
   731  019F                     	;# 
   732  019F                     	;# 
   733  020C                     	;# 
   734  020D                     	;# 
   735  020E                     	;# 
   736  0210                     	;# 
   737  0211                     	;# 
   738  0211                     	;# 
   739  0212                     	;# 
   740  0212                     	;# 
   741  0213                     	;# 
   742  0213                     	;# 
   743  0214                     	;# 
   744  0214                     	;# 
   745  0215                     	;# 
   746  0215                     	;# 
   747  0215                     	;# 
   748  0215                     	;# 
   749  0216                     	;# 
   750  0216                     	;# 
   751  0217                     	;# 
   752  0217                     	;# 
   753  028C                     	;# 
   754  028D                     	;# 
   755  028E                     	;# 
   756  0291                     	;# 
   757  0291                     	;# 
   758  0292                     	;# 
   759  0293                     	;# 
   760  0293                     	;# 
   761  0298                     	;# 
   762  0298                     	;# 
   763  0299                     	;# 
   764  029A                     	;# 
   765  029A                     	;# 
   766  029E                     	;# 
   767  030C                     	;# 
   768  030D                     	;# 
   769  030E                     	;# 
   770  038C                     	;# 
   771  038D                     	;# 
   772  038E                     	;# 
   773  0390                     	;# 
   774  0391                     	;# 
   775  0392                     	;# 
   776  0393                     	;# 
   777  0394                     	;# 
   778  0395                     	;# 
   779  0396                     	;# 
   780  0397                     	;# 
   781  0398                     	;# 
   782  0399                     	;# 
   783  039D                     	;# 
   784  039E                     	;# 
   785  039F                     	;# 
   786  0415                     	;# 
   787  0416                     	;# 
   788  0417                     	;# 
   789  041C                     	;# 
   790  041D                     	;# 
   791  041E                     	;# 
   792  0498                     	;# 
   793  0498                     	;# 
   794  0499                     	;# 
   795  049A                     	;# 
   796  049B                     	;# 
   797  049B                     	;# 
   798  049C                     	;# 
   799  049D                     	;# 
   800  049E                     	;# 
   801  049F                     	;# 
   802  0511                     	;# 
   803  0515                     	;# 
   804  0617                     	;# 
   805  0618                     	;# 
   806  0619                     	;# 
   807  0619                     	;# 
   808  061A                     	;# 
   809  061B                     	;# 
   810  061C                     	;# 
   811  061C                     	;# 
   812  0691                     	;# 
   813  0692                     	;# 
   814  0693                     	;# 
   815  0694                     	;# 
   816  0695                     	;# 
   817  0696                     	;# 
   818  0697                     	;# 
   819  0698                     	;# 
   820  0699                     	;# 
   821  069A                     	;# 
   822  069B                     	;# 
   823  069C                     	;# 
   824  069D                     	;# 
   825  069E                     	;# 
   826  069F                     	;# 
   827  0E0F                     	;# 
   828  0E10                     	;# 
   829  0E11                     	;# 
   830  0E12                     	;# 
   831  0E13                     	;# 
   832  0E14                     	;# 
   833  0E15                     	;# 
   834  0E17                     	;# 
   835  0E20                     	;# 
   836  0E21                     	;# 
   837  0E22                     	;# 
   838  0E24                     	;# 
   839  0E25                     	;# 
   840  0E28                     	;# 
   841  0E29                     	;# 
   842  0E2A                     	;# 
   843  0E2B                     	;# 
   844  0E90                     	;# 
   845  0E91                     	;# 
   846  0E92                     	;# 
   847  0E93                     	;# 
   848  0E94                     	;# 
   849  0E95                     	;# 
   850  0E96                     	;# 
   851  0E97                     	;# 
   852  0E98                     	;# 
   853  0E99                     	;# 
   854  0E9A                     	;# 
   855  0E9B                     	;# 
   856  0E9C                     	;# 
   857  0E9D                     	;# 
   858  0E9E                     	;# 
   859  0E9F                     	;# 
   860  0EA0                     	;# 
   861  0EA1                     	;# 
   862  0EA2                     	;# 
   863  0EA3                     	;# 
   864  0EA4                     	;# 
   865  0EA5                     	;# 
   866  0EA6                     	;# 
   867  0EA7                     	;# 
   868  0F0F                     	;# 
   869  0F10                     	;# 
   870  0F11                     	;# 
   871  0F12                     	;# 
   872  0F13                     	;# 
   873  0F14                     	;# 
   874  0F15                     	;# 
   875  0F16                     	;# 
   876  0F17                     	;# 
   877  0F18                     	;# 
   878  0F19                     	;# 
   879  0F1A                     	;# 
   880  0F1B                     	;# 
   881  0F1C                     	;# 
   882  0F1D                     	;# 
   883  0F1E                     	;# 
   884  0F1F                     	;# 
   885  0F20                     	;# 
   886  0F21                     	;# 
   887  0F22                     	;# 
   888  0F23                     	;# 
   889  0F24                     	;# 
   890  0F25                     	;# 
   891  0F26                     	;# 
   892  0F27                     	;# 
   893  0F28                     	;# 
   894  0F29                     	;# 
   895  0F2A                     	;# 
   896  0F2B                     	;# 
   897  0F2C                     	;# 
   898  0F2D                     	;# 
   899  0F2E                     	;# 
   900  0F2F                     	;# 
   901  0F30                     	;# 
   902  0F31                     	;# 
   903  0F32                     	;# 
   904  0F33                     	;# 
   905  0F34                     	;# 
   906  0F35                     	;# 
   907  0F36                     	;# 
   908  0F37                     	;# 
   909  0FE4                     	;# 
   910  0FE5                     	;# 
   911  0FE6                     	;# 
   912  0FE7                     	;# 
   913  0FE8                     	;# 
   914  0FE9                     	;# 
   915  0FEA                     	;# 
   916  0FEB                     	;# 
   917  0FED                     	;# 
   918  0FEE                     	;# 
   919  0FEF                     	;# 
   920  0000                     	;# 
   921  0001                     	;# 
   922  0002                     	;# 
   923  0003                     	;# 
   924  0004                     	;# 
   925  0005                     	;# 
   926  0006                     	;# 
   927  0007                     	;# 
   928  0008                     	;# 
   929  0009                     	;# 
   930  000A                     	;# 
   931  000B                     	;# 
   932  000C                     	;# 
   933  000D                     	;# 
   934  000E                     	;# 
   935  0010                     	;# 
   936  0011                     	;# 
   937  0012                     	;# 
   938  0013                     	;# 
   939  0015                     	;# 
   940  0016                     	;# 
   941  0016                     	;# 
   942  0017                     	;# 
   943  0018                     	;# 
   944  0019                     	;# 
   945  001A                     	;# 
   946  001B                     	;# 
   947  001C                     	;# 
   948  008C                     	;# 
   949  008D                     	;# 
   950  008E                     	;# 
   951  0090                     	;# 
   952  0091                     	;# 
   953  0092                     	;# 
   954  0093                     	;# 
   955  0095                     	;# 
   956  0096                     	;# 
   957  0097                     	;# 
   958  0098                     	;# 
   959  0099                     	;# 
   960  009A                     	;# 
   961  009B                     	;# 
   962  009B                     	;# 
   963  009C                     	;# 
   964  009D                     	;# 
   965  009E                     	;# 
   966  009F                     	;# 
   967  010C                     	;# 
   968  010D                     	;# 
   969  010E                     	;# 
   970  0111                     	;# 
   971  0112                     	;# 
   972  0113                     	;# 
   973  0114                     	;# 
   974  0115                     	;# 
   975  0116                     	;# 
   976  0117                     	;# 
   977  0118                     	;# 
   978  0119                     	;# 
   979  011A                     	;# 
   980  011B                     	;# 
   981  011B                     	;# 
   982  011C                     	;# 
   983  018C                     	;# 
   984  018D                     	;# 
   985  018E                     	;# 
   986  0191                     	;# 
   987  0191                     	;# 
   988  0192                     	;# 
   989  0193                     	;# 
   990  0193                     	;# 
   991  0194                     	;# 
   992  0195                     	;# 
   993  0196                     	;# 
   994  0197                     	;# 
   995  0199                     	;# 
   996  0199                     	;# 
   997  0199                     	;# 
   998  019A                     	;# 
   999  019A                     	;# 
  1000  019A                     	;# 
  1001  019B                     	;# 
  1002  019B                     	;# 
  1003  019B                     	;# 
  1004  019B                     	;# 
  1005  019B                     	;# 
  1006  019C                     	;# 
  1007  019C                     	;# 
  1008  019C                     	;# 
  1009  019D                     	;# 
  1010  019D                     	;# 
  1011  019D                     	;# 
  1012  019E                     	;# 
  1013  019E                     	;# 
  1014  019E                     	;# 
  1015  019F                     	;# 
  1016  019F                     	;# 
  1017  019F                     	;# 
  1018  019F                     	;# 
  1019  019F                     	;# 
  1020  020C                     	;# 
  1021  020D                     	;# 
  1022  020E                     	;# 
  1023  0210                     	;# 
  1024  0211                     	;# 
  1025  0211                     	;# 
  1026  0212                     	;# 
  1027  0212                     	;# 
  1028  0213                     	;# 
  1029  0213                     	;# 
  1030  0214                     	;# 
  1031  0214                     	;# 
  1032  0215                     	;# 
  1033  0215                     	;# 
  1034  0215                     	;# 
  1035  0215                     	;# 
  1036  0216                     	;# 
  1037  0216                     	;# 
  1038  0217                     	;# 
  1039  0217                     	;# 
  1040  028C                     	;# 
  1041  028D                     	;# 
  1042  028E                     	;# 
  1043  0291                     	;# 
  1044  0291                     	;# 
  1045  0292                     	;# 
  1046  0293                     	;# 
  1047  0293                     	;# 
  1048  0298                     	;# 
  1049  0298                     	;# 
  1050  0299                     	;# 
  1051  029A                     	;# 
  1052  029A                     	;# 
  1053  029E                     	;# 
  1054  030C                     	;# 
  1055  030D                     	;# 
  1056  030E                     	;# 
  1057  038C                     	;# 
  1058  038D                     	;# 
  1059  038E                     	;# 
  1060  0390                     	;# 
  1061  0391                     	;# 
  1062  0392                     	;# 
  1063  0393                     	;# 
  1064  0394                     	;# 
  1065  0395                     	;# 
  1066  0396                     	;# 
  1067  0397                     	;# 
  1068  0398                     	;# 
  1069  0399                     	;# 
  1070  039D                     	;# 
  1071  039E                     	;# 
  1072  039F                     	;# 
  1073  0415                     	;# 
  1074  0416                     	;# 
  1075  0417                     	;# 
  1076  041C                     	;# 
  1077  041D                     	;# 
  1078  041E                     	;# 
  1079  0498                     	;# 
  1080  0498                     	;# 
  1081  0499                     	;# 
  1082  049A                     	;# 
  1083  049B                     	;# 
  1084  049B                     	;# 
  1085  049C                     	;# 
  1086  049D                     	;# 
  1087  049E                     	;# 
  1088  049F                     	;# 
  1089  0511                     	;# 
  1090  0515                     	;# 
  1091  0617                     	;# 
  1092  0618                     	;# 
  1093  0619                     	;# 
  1094  0619                     	;# 
  1095  061A                     	;# 
  1096  061B                     	;# 
  1097  061C                     	;# 
  1098  061C                     	;# 
  1099  0691                     	;# 
  1100  0692                     	;# 
  1101  0693                     	;# 
  1102  0694                     	;# 
  1103  0695                     	;# 
  1104  0696                     	;# 
  1105  0697                     	;# 
  1106  0698                     	;# 
  1107  0699                     	;# 
  1108  069A                     	;# 
  1109  069B                     	;# 
  1110  069C                     	;# 
  1111  069D                     	;# 
  1112  069E                     	;# 
  1113  069F                     	;# 
  1114  0E0F                     	;# 
  1115  0E10                     	;# 
  1116  0E11                     	;# 
  1117  0E12                     	;# 
  1118  0E13                     	;# 
  1119  0E14                     	;# 
  1120  0E15                     	;# 
  1121  0E17                     	;# 
  1122  0E20                     	;# 
  1123  0E21                     	;# 
  1124  0E22                     	;# 
  1125  0E24                     	;# 
  1126  0E25                     	;# 
  1127  0E28                     	;# 
  1128  0E29                     	;# 
  1129  0E2A                     	;# 
  1130  0E2B                     	;# 
  1131  0E90                     	;# 
  1132  0E91                     	;# 
  1133  0E92                     	;# 
  1134  0E93                     	;# 
  1135  0E94                     	;# 
  1136  0E95                     	;# 
  1137  0E96                     	;# 
  1138  0E97                     	;# 
  1139  0E98                     	;# 
  1140  0E99                     	;# 
  1141  0E9A                     	;# 
  1142  0E9B                     	;# 
  1143  0E9C                     	;# 
  1144  0E9D                     	;# 
  1145  0E9E                     	;# 
  1146  0E9F                     	;# 
  1147  0EA0                     	;# 
  1148  0EA1                     	;# 
  1149  0EA2                     	;# 
  1150  0EA3                     	;# 
  1151  0EA4                     	;# 
  1152  0EA5                     	;# 
  1153  0EA6                     	;# 
  1154  0EA7                     	;# 
  1155  0F0F                     	;# 
  1156  0F10                     	;# 
  1157  0F11                     	;# 
  1158  0F12                     	;# 
  1159  0F13                     	;# 
  1160  0F14                     	;# 
  1161  0F15                     	;# 
  1162  0F16                     	;# 
  1163  0F17                     	;# 
  1164  0F18                     	;# 
  1165  0F19                     	;# 
  1166  0F1A                     	;# 
  1167  0F1B                     	;# 
  1168  0F1C                     	;# 
  1169  0F1D                     	;# 
  1170  0F1E                     	;# 
  1171  0F1F                     	;# 
  1172  0F20                     	;# 
  1173  0F21                     	;# 
  1174  0F22                     	;# 
  1175  0F23                     	;# 
  1176  0F24                     	;# 
  1177  0F25                     	;# 
  1178  0F26                     	;# 
  1179  0F27                     	;# 
  1180  0F28                     	;# 
  1181  0F29                     	;# 
  1182  0F2A                     	;# 
  1183  0F2B                     	;# 
  1184  0F2C                     	;# 
  1185  0F2D                     	;# 
  1186  0F2E                     	;# 
  1187  0F2F                     	;# 
  1188  0F30                     	;# 
  1189  0F31                     	;# 
  1190  0F32                     	;# 
  1191  0F33                     	;# 
  1192  0F34                     	;# 
  1193  0F35                     	;# 
  1194  0F36                     	;# 
  1195  0F37                     	;# 
  1196  0FE4                     	;# 
  1197  0FE5                     	;# 
  1198  0FE6                     	;# 
  1199  0FE7                     	;# 
  1200  0FE8                     	;# 
  1201  0FE9                     	;# 
  1202  0FEA                     	;# 
  1203  0FEB                     	;# 
  1204  0FED                     	;# 
  1205  0FEE                     	;# 
  1206  0FEF                     	;# 
  1207  0000                     	;# 
  1208  0001                     	;# 
  1209  0002                     	;# 
  1210  0003                     	;# 
  1211  0004                     	;# 
  1212  0005                     	;# 
  1213  0006                     	;# 
  1214  0007                     	;# 
  1215  0008                     	;# 
  1216  0009                     	;# 
  1217  000A                     	;# 
  1218  000B                     	;# 
  1219  000C                     	;# 
  1220  000D                     	;# 
  1221  000E                     	;# 
  1222  0010                     	;# 
  1223  0011                     	;# 
  1224  0012                     	;# 
  1225  0013                     	;# 
  1226  0015                     	;# 
  1227  0016                     	;# 
  1228  0016                     	;# 
  1229  0017                     	;# 
  1230  0018                     	;# 
  1231  0019                     	;# 
  1232  001A                     	;# 
  1233  001B                     	;# 
  1234  001C                     	;# 
  1235  008C                     	;# 
  1236  008D                     	;# 
  1237  008E                     	;# 
  1238  0090                     	;# 
  1239  0091                     	;# 
  1240  0092                     	;# 
  1241  0093                     	;# 
  1242  0095                     	;# 
  1243  0096                     	;# 
  1244  0097                     	;# 
  1245  0098                     	;# 
  1246  0099                     	;# 
  1247  009A                     	;# 
  1248  009B                     	;# 
  1249  009B                     	;# 
  1250  009C                     	;# 
  1251  009D                     	;# 
  1252  009E                     	;# 
  1253  009F                     	;# 
  1254  010C                     	;# 
  1255  010D                     	;# 
  1256  010E                     	;# 
  1257  0111                     	;# 
  1258  0112                     	;# 
  1259  0113                     	;# 
  1260  0114                     	;# 
  1261  0115                     	;# 
  1262  0116                     	;# 
  1263  0117                     	;# 
  1264  0118                     	;# 
  1265  0119                     	;# 
  1266  011A                     	;# 
  1267  011B                     	;# 
  1268  011B                     	;# 
  1269  011C                     	;# 
  1270  018C                     	;# 
  1271  018D                     	;# 
  1272  018E                     	;# 
  1273  0191                     	;# 
  1274  0191                     	;# 
  1275  0192                     	;# 
  1276  0193                     	;# 
  1277  0193                     	;# 
  1278  0194                     	;# 
  1279  0195                     	;# 
  1280  0196                     	;# 
  1281  0197                     	;# 
  1282  0199                     	;# 
  1283  0199                     	;# 
  1284  0199                     	;# 
  1285  019A                     	;# 
  1286  019A                     	;# 
  1287  019A                     	;# 
  1288  019B                     	;# 
  1289  019B                     	;# 
  1290  019B                     	;# 
  1291  019B                     	;# 
  1292  019B                     	;# 
  1293  019C                     	;# 
  1294  019C                     	;# 
  1295  019C                     	;# 
  1296  019D                     	;# 
  1297  019D                     	;# 
  1298  019D                     	;# 
  1299  019E                     	;# 
  1300  019E                     	;# 
  1301  019E                     	;# 
  1302  019F                     	;# 
  1303  019F                     	;# 
  1304  019F                     	;# 
  1305  019F                     	;# 
  1306  019F                     	;# 
  1307  020C                     	;# 
  1308  020D                     	;# 
  1309  020E                     	;# 
  1310  0210                     	;# 
  1311  0211                     	;# 
  1312  0211                     	;# 
  1313  0212                     	;# 
  1314  0212                     	;# 
  1315  0213                     	;# 
  1316  0213                     	;# 
  1317  0214                     	;# 
  1318  0214                     	;# 
  1319  0215                     	;# 
  1320  0215                     	;# 
  1321  0215                     	;# 
  1322  0215                     	;# 
  1323  0216                     	;# 
  1324  0216                     	;# 
  1325  0217                     	;# 
  1326  0217                     	;# 
  1327  028C                     	;# 
  1328  028D                     	;# 
  1329  028E                     	;# 
  1330  0291                     	;# 
  1331  0291                     	;# 
  1332  0292                     	;# 
  1333  0293                     	;# 
  1334  0293                     	;# 
  1335  0298                     	;# 
  1336  0298                     	;# 
  1337  0299                     	;# 
  1338  029A                     	;# 
  1339  029A                     	;# 
  1340  029E                     	;# 
  1341  030C                     	;# 
  1342  030D                     	;# 
  1343  030E                     	;# 
  1344  038C                     	;# 
  1345  038D                     	;# 
  1346  038E                     	;# 
  1347  0390                     	;# 
  1348  0391                     	;# 
  1349  0392                     	;# 
  1350  0393                     	;# 
  1351  0394                     	;# 
  1352  0395                     	;# 
  1353  0396                     	;# 
  1354  0397                     	;# 
  1355  0398                     	;# 
  1356  0399                     	;# 
  1357  039D                     	;# 
  1358  039E                     	;# 
  1359  039F                     	;# 
  1360  0415                     	;# 
  1361  0416                     	;# 
  1362  0417                     	;# 
  1363  041C                     	;# 
  1364  041D                     	;# 
  1365  041E                     	;# 
  1366  0498                     	;# 
  1367  0498                     	;# 
  1368  0499                     	;# 
  1369  049A                     	;# 
  1370  049B                     	;# 
  1371  049B                     	;# 
  1372  049C                     	;# 
  1373  049D                     	;# 
  1374  049E                     	;# 
  1375  049F                     	;# 
  1376  0511                     	;# 
  1377  0515                     	;# 
  1378  0617                     	;# 
  1379  0618                     	;# 
  1380  0619                     	;# 
  1381  0619                     	;# 
  1382  061A                     	;# 
  1383  061B                     	;# 
  1384  061C                     	;# 
  1385  061C                     	;# 
  1386  0691                     	;# 
  1387  0692                     	;# 
  1388  0693                     	;# 
  1389  0694                     	;# 
  1390  0695                     	;# 
  1391  0696                     	;# 
  1392  0697                     	;# 
  1393  0698                     	;# 
  1394  0699                     	;# 
  1395  069A                     	;# 
  1396  069B                     	;# 
  1397  069C                     	;# 
  1398  069D                     	;# 
  1399  069E                     	;# 
  1400  069F                     	;# 
  1401  0E0F                     	;# 
  1402  0E10                     	;# 
  1403  0E11                     	;# 
  1404  0E12                     	;# 
  1405  0E13                     	;# 
  1406  0E14                     	;# 
  1407  0E15                     	;# 
  1408  0E17                     	;# 
  1409  0E20                     	;# 
  1410  0E21                     	;# 
  1411  0E22                     	;# 
  1412  0E24                     	;# 
  1413  0E25                     	;# 
  1414  0E28                     	;# 
  1415  0E29                     	;# 
  1416  0E2A                     	;# 
  1417  0E2B                     	;# 
  1418  0E90                     	;# 
  1419  0E91                     	;# 
  1420  0E92                     	;# 
  1421  0E93                     	;# 
  1422  0E94                     	;# 
  1423  0E95                     	;# 
  1424  0E96                     	;# 
  1425  0E97                     	;# 
  1426  0E98                     	;# 
  1427  0E99                     	;# 
  1428  0E9A                     	;# 
  1429  0E9B                     	;# 
  1430  0E9C                     	;# 
  1431  0E9D                     	;# 
  1432  0E9E                     	;# 
  1433  0E9F                     	;# 
  1434  0EA0                     	;# 
  1435  0EA1                     	;# 
  1436  0EA2                     	;# 
  1437  0EA3                     	;# 
  1438  0EA4                     	;# 
  1439  0EA5                     	;# 
  1440  0EA6                     	;# 
  1441  0EA7                     	;# 
  1442  0F0F                     	;# 
  1443  0F10                     	;# 
  1444  0F11                     	;# 
  1445  0F12                     	;# 
  1446  0F13                     	;# 
  1447  0F14                     	;# 
  1448  0F15                     	;# 
  1449  0F16                     	;# 
  1450  0F17                     	;# 
  1451  0F18                     	;# 
  1452  0F19                     	;# 
  1453  0F1A                     	;# 
  1454  0F1B                     	;# 
  1455  0F1C                     	;# 
  1456  0F1D                     	;# 
  1457  0F1E                     	;# 
  1458  0F1F                     	;# 
  1459  0F20                     	;# 
  1460  0F21                     	;# 
  1461  0F22                     	;# 
  1462  0F23                     	;# 
  1463  0F24                     	;# 
  1464  0F25                     	;# 
  1465  0F26                     	;# 
  1466  0F27                     	;# 
  1467  0F28                     	;# 
  1468  0F29                     	;# 
  1469  0F2A                     	;# 
  1470  0F2B                     	;# 
  1471  0F2C                     	;# 
  1472  0F2D                     	;# 
  1473  0F2E                     	;# 
  1474  0F2F                     	;# 
  1475  0F30                     	;# 
  1476  0F31                     	;# 
  1477  0F32                     	;# 
  1478  0F33                     	;# 
  1479  0F34                     	;# 
  1480  0F35                     	;# 
  1481  0F36                     	;# 
  1482  0F37                     	;# 
  1483  0FE4                     	;# 
  1484  0FE5                     	;# 
  1485  0FE6                     	;# 
  1486  0FE7                     	;# 
  1487  0FE8                     	;# 
  1488  0FE9                     	;# 
  1489  0FEA                     	;# 
  1490  0FEB                     	;# 
  1491  0FED                     	;# 
  1492  0FEE                     	;# 
  1493  0FEF                     	;# 
  1494  001C                     _T2CON	set	28
  1495  001A                     _TMR2	set	26
  1496  001B                     _PR2	set	27
  1497  0011                     _PIR1bits	set	17
  1498  000B                     _INTCONbits	set	11
  1499  009D                     _ADCON0bits	set	157
  1500  009C                     _ADRESH	set	156
  1501  009B                     _ADRESL	set	155
  1502  009F                     _ADCON2	set	159
  1503  009E                     _ADCON1	set	158
  1504  009D                     _ADCON0	set	157
  1505  0091                     _PIE1bits	set	145
  1506  0097                     _WDTCON	set	151
  1507  0098                     _OSCTUNE	set	152
  1508  0099                     _OSCCON	set	153
  1509  0095                     _OPTION_REGbits	set	149
  1510  0090                     _TRISE	set	144
  1511  008E                     _TRISC	set	142
  1512  008D                     _TRISB	set	141
  1513  008C                     _TRISA	set	140
  1514  04D6                     _PLLR	set	1238
  1515  011A                     _DAC2CON0	set	282
  1516  0118                     _DAC1CON0	set	280
  1517  0117                     _FVRCON	set	279
  1518  011B                     _DAC2CON1	set	283
  1519  0119                     _DAC1CON1	set	281
  1520  0116                     _BORCON	set	278
  1521  010E                     _LATC	set	270
  1522  010D                     _LATB	set	269
  1523  010C                     _LATA	set	268
  1524  018E                     _ANSELC	set	398
  1525  018D                     _ANSELB	set	397
  1526  018C                     _ANSELA	set	396
  1527  0215                     _SSP1CON1bits	set	533
  1528  0216                     _SSP1CON2bits	set	534
  1529  0214                     _SSP1STATbits	set	532
  1530  0211                     _SSP1BUF	set	529
  1531  0212                     _SSP1ADD	set	530
  1532  0217                     _SSP1CON3	set	535
  1533  0216                     _SSP1CON2	set	534
  1534  0215                     _SSP1CON1	set	533
  1535  0214                     _SSP1STAT	set	532
  1536  0210                     _WPUE	set	528
  1537  020E                     _WPUC	set	526
  1538  020D                     _WPUB	set	525
  1539  020C                     _WPUA	set	524
  1540  0291                     _CCPR1L	set	657
  1541  0293                     _CCP1CON	set	659
  1542  0299                     _CCPR2H	set	665
  1543  0298                     _CCPR2L	set	664
  1544  029A                     _CCP2CON	set	666
  1545  029E                     _CCPTMRSbits	set	670
  1546  028E                     _ODCONC	set	654
  1547  028D                     _ODCONB	set	653
  1548  028C                     _ODCONA	set	652
  1549  0515                     _OPA2CON	set	1301
  1550  0511                     _OPA1CON	set	1297
  1551  0617                     _PWM3DCL	set	1559
  1552  0618                     _PWM3DCH	set	1560
  1553  0619                     _PWM3CON	set	1561
  1554  061A                     _PWM4DCL	set	1562
  1555  061B                     _PWM4DCH	set	1563
  1556  061C                     _PWM4CON	set	1564
  1557  0E20                     _SSPCLKPPSbits	set	3616
  1558  0E21                     _SSPDATPPSbits	set	3617
  1559  0EA0                     _RC0PPSbits	set	3744
  1560  0E98                     _RB0PPSbits	set	3736
  1561  0EA3                     _RC3PPSbits	set	3747
  1562  0EA4                     _RC4PPSbits	set	3748
  1563  0EA1                     _RC1PPSbits	set	3745
  1564  0EA2                     _RC2PPSbits	set	3746
  1565                           
  1566                           ; #config settings
  1567  0000                     
  1568                           	psect	cinit
  1569  001A                     start_initialization:	
  1570  001A                     __initialization:	
  1571                           
  1572                           ; Clear objects allocated to BANK0
  1573  001A  3020               	movlw	low __pbssBANK0
  1574  001B  0084               	movwf	4
  1575  001C  3000               	movlw	high __pbssBANK0
  1576  001D  0085               	movwf	5
  1577  001E  3048               	movlw	72
  1578  001F  3182  22F3         	fcall	clear_ram0
  1579  0021                     end_of_initialization:	
  1580                           ;End of C runtime variable initialization code
  1581                           
  1582  0021                     __end_of__initialization:	
  1583  0021  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1584  0022  0020               	movlb	0
  1585  0023  3181  297F         	ljmp	_main	;jump to C main() function
  1586                           
  1587                           	psect	bssBANK0
  1588  0020                     __pbssBANK0:	
  1589  0020                     _SENS_VAL:	
  1590  0020                     	ds	64
  1591  0060                     LED_Get_DutyCycle@value:	
  1592  0060                     	ds	2
  1593  0062                     I2C_Process@data:	
  1594  0062                     	ds	2
  1595  0064                     I2C_Process@LSB_nMSB:	
  1596  0064                     	ds	1
  1597  0065                     I2C_Process@writeType:	
  1598  0065                     	ds	1
  1599  0066                     I2C_Process@address:	
  1600  0066                     	ds	1
  1601  0067                     _I2C_wData:	
  1602  0067                     	ds	1
  1603                           
  1604                           	psect	clrtext
  1605  02F3                     clear_ram0:	
  1606                           ;	Called with FSR0 containing the base address, and
  1607                           ;	WREG with the size to clear
  1608                           
  1609  02F3  0064               	clrwdt	;clear the watchdog before getting into this loop
  1610  02F4                     clrloop0:	
  1611  02F4  0180               	clrf	0	;clear RAM location pointed to by FSR
  1612  02F5  3101               	addfsr 0,1
  1613  02F6  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1614  02F7  2AF4               	goto	clrloop0	;have we reached the end yet?
  1615  02F8  3400               	retlw	0	;all done for this memory range, return
  1616                           
  1617                           	psect	cstackBANK1
  1618  0000                     __pcstackBANK1:	
  1619  0000                     ??_I2C_Init:	
  1620  0000                     ??_LED_Init:	
  1621                           ; 1 bytes @ 0x0
  1622                           
  1623  0000                     ??_IREF_Init:	
  1624                           ; 1 bytes @ 0x0
  1625                           
  1626  0000                     ??_ADC_Init:	
  1627                           ; 1 bytes @ 0x0
  1628                           
  1629  0000                     ??_main:	
  1630                           ; 1 bytes @ 0x0
  1631                           
  1632                           
  1633                           	psect	cstackCOMMON
  1634  0070                     __pcstackCOMMON:	
  1635                           ; 1 bytes @ 0x0
  1636                           
  1637  0070                     ?_I2C_Init:	
  1638  0070                     ?_LED_Init:	
  1639                           ; 1 bytes @ 0x0
  1640                           
  1641  0070                     ?_IREF_Init:	
  1642                           ; 1 bytes @ 0x0
  1643                           
  1644  0070                     ?_ADC_Init:	
  1645                           ; 1 bytes @ 0x0
  1646                           
  1647  0070                     ?_I2C_InterruptHandler:	
  1648                           ; 1 bytes @ 0x0
  1649                           
  1650  0070                     ?_I2C_Process:	
  1651                           ; 1 bytes @ 0x0
  1652                           
  1653  0070                     ?_IREF_SetOutput:	
  1654                           ; 1 bytes @ 0x0
  1655                           
  1656  0070                     ?_LED_Set_DutyCycle:	
  1657                           ; 1 bytes @ 0x0
  1658                           
  1659  0070                     ?_main:	
  1660                           ; 1 bytes @ 0x0
  1661                           
  1662  0070                     ?_InterruptHandler:	
  1663                           ; 1 bytes @ 0x0
  1664                           
  1665  0070                     ?_ADC_ProcessCapture:	
  1666                           ; 1 bytes @ 0x0
  1667                           
  1668  0070                     ?_LED_Get_DutyCycle:	
  1669                           ; 2 bytes @ 0x0
  1670                           
  1671  0070                     LED_Set_DutyCycle@dutycycle:	
  1672                           ; 2 bytes @ 0x0
  1673                           
  1674  0070                     IREF_SetOutput@value:	
  1675                           ; 2 bytes @ 0x0
  1676                           
  1677                           
  1678                           ; 2 bytes @ 0x0
  1679  0070                     	ds	2
  1680  0072                     ??_IREF_SetOutput:	
  1681  0072                     ??_LED_Set_DutyCycle:	
  1682                           ; 1 bytes @ 0x2
  1683                           
  1684  0072                     ??_ADC_ProcessCapture:	
  1685                           ; 1 bytes @ 0x2
  1686                           
  1687  0072                     ??_LED_Get_DutyCycle:	
  1688                           ; 1 bytes @ 0x2
  1689                           
  1690  0072                     IREF_SetOutput@dac_unit:	
  1691                           ; 1 bytes @ 0x2
  1692                           
  1693                           
  1694                           ; 1 bytes @ 0x2
  1695  0072                     	ds	1
  1696  0073                     ADC_ProcessCapture@address:	
  1697                           
  1698                           ; 1 bytes @ 0x3
  1699  0073                     	ds	1
  1700  0074                     LED_Set_DutyCycle@led:	
  1701                           
  1702                           ; 1 bytes @ 0x4
  1703  0074                     	ds	5
  1704  0079                     LED_Get_DutyCycle@led:	
  1705                           
  1706                           ; 1 bytes @ 0x9
  1707  0079                     	ds	1
  1708  007A                     ?__get_significant:	
  1709  007A                     __get_significant@value:	
  1710                           ; 1 bytes @ 0xA
  1711                           
  1712                           
  1713                           ; 2 bytes @ 0xA
  1714  007A                     	ds	2
  1715  007C                     __get_significant@LSB_nMSB:	
  1716                           
  1717                           ; 1 bytes @ 0xC
  1718  007C                     	ds	1
  1719  007D                     ??__get_significant:	
  1720  007D                     I2C_Process@i2c_bus_state:	
  1721                           ; 1 bytes @ 0xD
  1722                           
  1723                           
  1724                           ; 1 bytes @ 0xD
  1725  007D                     	ds	1
  1726                           
  1727                           	psect	cstackBANK0
  1728  0068                     __pcstackBANK0:	
  1729  0068                     ??_I2C_Process:	
  1730                           
  1731                           ; 1 bytes @ 0x0
  1732  0068                     	ds	3
  1733  006B                     ??_I2C_InterruptHandler:	
  1734                           
  1735                           ; 1 bytes @ 0x3
  1736  006B                     	ds	1
  1737  006C                     I2C_InterruptHandler@I2C_buffer:	
  1738                           
  1739                           ; 1 bytes @ 0x4
  1740  006C                     	ds	1
  1741  006D                     ??_InterruptHandler:	
  1742                           
  1743                           ; 1 bytes @ 0x5
  1744  006D                     	ds	1
  1745                           
  1746                           	psect	maintext
  1747  017F                     __pmaintext:	
  1748 ;;
  1749 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1750 ;;
  1751 ;; *************** function _main *****************
  1752 ;; Defined at:
  1753 ;;		line 65 in file "main.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;		None
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2, status,0, pclath, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : B1F/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1767 ;;      Params:         0       0       0       0       0       0       0       0
  1768 ;;      Locals:         0       0       0       0       0       0       0       0
  1769 ;;      Temps:          0       0       0       0       0       0       0       0
  1770 ;;      Totals:         0       0       0       0       0       0       0       0
  1771 ;;Total ram usage:        0 bytes
  1772 ;; Hardware stack levels required when called:    5
  1773 ;; This function calls:
  1774 ;;		_ADC_Init
  1775 ;;		_I2C_Init
  1776 ;;		_IREF_Init
  1777 ;;		_LED_Init
  1778 ;; This function is called by:
  1779 ;;		Startup code after reset
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           
  1784                           ;psect for function _main
  1785  017F                     _main:	
  1786                           
  1787                           ;main.c: 68: LATA = 0x00;
  1788                           
  1789                           ;incstack = 0
  1790                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1791  017F  0022               	movlb	2	; select bank2
  1792  0180  018C               	clrf	12	;volatile
  1793                           
  1794                           ;main.c: 69: LATB = 0x00;
  1795  0181  018D               	clrf	13	;volatile
  1796                           
  1797                           ;main.c: 70: LATC = 0x00;
  1798  0182  018E               	clrf	14	;volatile
  1799                           
  1800                           ;main.c: 71: TRISA = 0xFD;
  1801  0183  30FD               	movlw	253
  1802  0184  0021               	movlb	1	; select bank1
  1803  0185  008C               	movwf	12	;volatile
  1804                           
  1805                           ;main.c: 72: TRISB = 0xFC;
  1806  0186  30FC               	movlw	252
  1807  0187  008D               	movwf	13	;volatile
  1808                           
  1809                           ;main.c: 73: TRISC = 0xF8;
  1810  0188  30F8               	movlw	248
  1811  0189  008E               	movwf	14	;volatile
  1812                           
  1813                           ;main.c: 74: TRISE = 0x08;
  1814  018A  3008               	movlw	8
  1815  018B  0090               	movwf	16	;volatile
  1816                           
  1817                           ;main.c: 75: ANSELA = 0x3F;
  1818  018C  303F               	movlw	63
  1819  018D  0023               	movlb	3	; select bank3
  1820  018E  008C               	movwf	12	;volatile
  1821                           
  1822                           ;main.c: 76: ANSELB = 0x3F;
  1823  018F  303F               	movlw	63
  1824  0190  008D               	movwf	13	;volatile
  1825                           
  1826                           ;main.c: 77: ANSELC = 0xE4;
  1827  0191  30E4               	movlw	228
  1828  0192  008E               	movwf	14	;volatile
  1829                           
  1830                           ;main.c: 78: WPUA = 0x00;
  1831  0193  0024               	movlb	4	; select bank4
  1832  0194  018C               	clrf	12	;volatile
  1833                           
  1834                           ;main.c: 79: WPUB = 0x00;
  1835  0195  018D               	clrf	13	;volatile
  1836                           
  1837                           ;main.c: 80: WPUC = 0x00;
  1838  0196  018E               	clrf	14	;volatile
  1839                           
  1840                           ;main.c: 81: WPUE = 0x00;
  1841  0197  0190               	clrf	16	;volatile
  1842                           
  1843                           ;main.c: 82: OPTION_REGbits.nWPUEN = 1;
  1844  0198  0021               	movlb	1	; select bank1
  1845  0199  1795               	bsf	21,7	;volatile
  1846                           
  1847                           ;main.c: 83: ODCONA = 0x00;
  1848  019A  0025               	movlb	5	; select bank5
  1849  019B  018C               	clrf	12	;volatile
  1850                           
  1851                           ;main.c: 84: ODCONB = 0x00;
  1852  019C  018D               	clrf	13	;volatile
  1853                           
  1854                           ;main.c: 85: ODCONC = 0x00;
  1855  019D  018E               	clrf	14	;volatile
  1856                           
  1857                           ;main.c: 88: RC2PPSbits.RC2PPS = 0x0C;
  1858  019E  003D               	movlb	29	; select bank29
  1859  019F  0822               	movf	34,w	;volatile
  1860  01A0  39E0               	andlw	-32
  1861  01A1  380C               	iorlw	12
  1862  01A2  00A2               	movwf	34	;volatile
  1863                           
  1864                           ;main.c: 89: RC1PPSbits.RC1PPS = 0x0D;
  1865  01A3  0821               	movf	33,w	;volatile
  1866  01A4  39E0               	andlw	-32
  1867  01A5  380D               	iorlw	13
  1868  01A6  00A1               	movwf	33	;volatile
  1869                           
  1870                           ;main.c: 90: RC4PPSbits.RC4PPS = 0x11;
  1871  01A7  0824               	movf	36,w	;volatile
  1872  01A8  39E0               	andlw	-32
  1873  01A9  3811               	iorlw	17
  1874  01AA  00A4               	movwf	36	;volatile
  1875                           
  1876                           ;main.c: 91: SSPDATPPSbits.SSPDATPPS = 0x14;
  1877  01AB  003C               	movlb	28	; select bank28
  1878  01AC  0821               	movf	33,w	;volatile
  1879  01AD  39E0               	andlw	-32
  1880  01AE  3814               	iorlw	20
  1881  01AF  00A1               	movwf	33	;volatile
  1882                           
  1883                           ;main.c: 92: RC3PPSbits.RC3PPS = 0x10;
  1884  01B0  003D               	movlb	29	; select bank29
  1885  01B1  0823               	movf	35,w	;volatile
  1886  01B2  39E0               	andlw	-32
  1887  01B3  3810               	iorlw	16
  1888  01B4  00A3               	movwf	35	;volatile
  1889                           
  1890                           ;main.c: 93: SSPCLKPPSbits.SSPCLKPPS = 0x13;
  1891  01B5  003C               	movlb	28	; select bank28
  1892  01B6  0820               	movf	32,w	;volatile
  1893  01B7  39E0               	andlw	-32
  1894  01B8  3813               	iorlw	19
  1895  01B9  00A0               	movwf	32	;volatile
  1896                           
  1897                           ;main.c: 94: RB0PPSbits.RB0PPS = 0x0E;
  1898  01BA  003D               	movlb	29	; select bank29
  1899  01BB  0818               	movf	24,w	;volatile
  1900  01BC  39E0               	andlw	-32
  1901  01BD  380E               	iorlw	14
  1902  01BE  0098               	movwf	24	;volatile
  1903                           
  1904                           ;main.c: 95: RC0PPSbits.RC0PPS = 0x0F;
  1905  01BF  0820               	movf	32,w	;volatile
  1906  01C0  39E0               	andlw	-32
  1907  01C1  380F               	iorlw	15
  1908  01C2  00A0               	movwf	32	;volatile
  1909                           
  1910                           ;main.c: 98: OSCCON = 0x70;
  1911  01C3  3070               	movlw	112
  1912  01C4  0021               	movlb	1	; select bank1
  1913  01C5  0099               	movwf	25	;volatile
  1914                           
  1915                           ;main.c: 99: OSCTUNE = 0x00;
  1916  01C6  0198               	clrf	24	;volatile
  1917                           
  1918                           ;main.c: 100: BORCON = 0x00;
  1919  01C7  0022               	movlb	2	; select bank2
  1920  01C8  0196               	clrf	22	;volatile
  1921  01C9                     l83:	
  1922                           ;main.c: 102: while(PLLR == 0) {
  1923                           
  1924  01C9  0021               	movlb	1	; select bank1
  1925  01CA  1F1A               	btfss	26,6	;volatile
  1926  01CB  29C9               	goto	l83
  1927                           
  1928                           ;main.c: 104: }
  1929                           ;main.c: 107: WDTCON = 0x16;
  1930  01CC  3016               	movlw	22
  1931  01CD  0097               	movwf	23	;volatile
  1932                           
  1933                           ;main.c: 110: I2C_Init();
  1934  01CE  3182  22D5  3181   	fcall	_I2C_Init
  1935                           
  1936                           ;main.c: 111: LED_Init();
  1937  01D1  3182  2238  3181   	fcall	_LED_Init
  1938                           
  1939                           ;main.c: 112: IREF_Init();
  1940  01D4  3182  22C4  3181   	fcall	_IREF_Init
  1941                           
  1942                           ;main.c: 113: ADC_Init();
  1943  01D7  3182  22E3  3181   	fcall	_ADC_Init
  1944                           
  1945                           ;main.c: 116: INTCONbits.GIE = 1;
  1946  01DA  178B               	bsf	11,7	;volatile
  1947                           
  1948                           ;main.c: 117: INTCONbits.PEIE = 1;
  1949  01DB  170B               	bsf	11,6	;volatile
  1950  01DC                     l86:	
  1951                           ;main.c: 120: while (1) {
  1952                           
  1953  01DC  29DC               	goto	l86
  1954  01DD                     __end_of_main:	
  1955                           
  1956                           	psect	text1
  1957  0238                     __ptext1:	
  1958 ;; *************** function _LED_Init *****************
  1959 ;; Defined at:
  1960 ;;		line 35 in file "leds.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;		None
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;		None
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1    wreg      void 
  1967 ;; Registers used:
  1968 ;;		wreg, status,2, status,0
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1974 ;;      Params:         0       0       0       0       0       0       0       0
  1975 ;;      Locals:         0       0       0       0       0       0       0       0
  1976 ;;      Temps:          0       0       0       0       0       0       0       0
  1977 ;;      Totals:         0       0       0       0       0       0       0       0
  1978 ;;Total ram usage:        0 bytes
  1979 ;; Hardware stack levels used:    1
  1980 ;; Hardware stack levels required when called:    4
  1981 ;; This function calls:
  1982 ;;		Nothing
  1983 ;; This function is called by:
  1984 ;;		_main
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           
  1989                           ;psect for function _LED_Init
  1990  0238                     _LED_Init:	
  1991                           
  1992                           ;leds.c: 37: PR2 = 0xF9;
  1993                           
  1994                           ;incstack = 0
  1995                           ; Regs used in _LED_Init: [wreg+status,2+status,0]
  1996  0238  30F9               	movlw	249
  1997  0239  0020               	movlb	0	; select bank0
  1998  023A  009B               	movwf	27	;volatile
  1999                           
  2000                           ;leds.c: 38: TMR2 = 0x00;
  2001  023B  019A               	clrf	26	;volatile
  2002                           
  2003                           ;leds.c: 39: PIR1bits.TMR2IF = 0;
  2004  023C  1091               	bcf	17,1	;volatile
  2005                           
  2006                           ;leds.c: 40: T2CON = 0x07;
  2007  023D  3007               	movlw	7
  2008  023E  009C               	movwf	28	;volatile
  2009                           
  2010                           ;leds.c: 43: PWM4CON = 0x80;
  2011  023F  3080               	movlw	128
  2012  0240  002C               	movlb	12	; select bank12
  2013  0241  009C               	movwf	28	;volatile
  2014                           
  2015                           ;leds.c: 44: PWM4DCH = (uint8_t)((0x000 & 0x3FC) >> 2);
  2016  0242  019B               	clrf	27	;volatile
  2017                           
  2018                           ;leds.c: 45: PWM4DCL = (uint8_t)((0x000 & 0x003) << 6);
  2019  0243  019A               	clrf	26	;volatile
  2020                           
  2021                           ;leds.c: 46: CCPTMRSbits.P4TSEL = 0x0;
  2022  0244  303F               	movlw	-193
  2023  0245  0025               	movlb	5	; select bank5
  2024  0246  059E               	andwf	30,f	;volatile
  2025                           
  2026                           ;leds.c: 49: CCP2CON = 0x0C;
  2027  0247  300C               	movlw	12
  2028  0248  009A               	movwf	26	;volatile
  2029                           
  2030                           ;leds.c: 50: CCP2CON = (uint8_t)((CCP2CON & 0xCF) | (uint8_t)((0x000 & 0x003) << 4));
  2031  0249  081A               	movf	26,w	;volatile
  2032  024A  39CF               	andlw	207
  2033  024B  009A               	movwf	26	;volatile
  2034                           
  2035                           ;leds.c: 51: CCPR2L = (uint8_t)((0x000 & 0x3FC) >> 2);
  2036  024C  0198               	clrf	24	;volatile
  2037                           
  2038                           ;leds.c: 52: CCPR2H = 0x00;
  2039  024D  0199               	clrf	25	;volatile
  2040                           
  2041                           ;leds.c: 53: CCPTMRSbits.C2TSEL = 0x0;
  2042  024E  30F3               	movlw	-13
  2043  024F  059E               	andwf	30,f	;volatile
  2044                           
  2045                           ;leds.c: 56: CCP1CON = 0x0C;
  2046  0250  300C               	movlw	12
  2047  0251  0093               	movwf	19	;volatile
  2048                           
  2049                           ;leds.c: 57: CCP1CON = (uint8_t)((CCP1CON & 0xCF) | (uint8_t)((0x000 & 0x003) << 4));
  2050  0252  0813               	movf	19,w	;volatile
  2051  0253  39CF               	andlw	207
  2052  0254  0093               	movwf	19	;volatile
  2053                           
  2054                           ;leds.c: 58: CCPR1L = (uint8_t)((0x000 & 0x3FC) >> 2);
  2055  0255  0191               	clrf	17	;volatile
  2056                           
  2057                           ;leds.c: 59: CCPTMRSbits.C1TSEL = 0x0;
  2058  0256  30FC               	movlw	-4
  2059  0257  059E               	andwf	30,f	;volatile
  2060                           
  2061                           ;leds.c: 62: PWM3CON = 0x80;
  2062  0258  3080               	movlw	128
  2063  0259  002C               	movlb	12	; select bank12
  2064  025A  0099               	movwf	25	;volatile
  2065                           
  2066                           ;leds.c: 63: PWM3DCH = (uint8_t)((0x1F4 & 0x3FC) >> 2);
  2067  025B  307D               	movlw	125
  2068  025C  0098               	movwf	24	;volatile
  2069                           
  2070                           ;leds.c: 64: PWM3DCL = (uint8_t)((0x1F4 & 0x003) << 6);
  2071  025D  0197               	clrf	23	;volatile
  2072                           
  2073                           ;leds.c: 65: CCPTMRSbits.P3TSEL = 0x0;
  2074  025E  30CF               	movlw	-49
  2075  025F  0025               	movlb	5	; select bank5
  2076  0260  059E               	andwf	30,f	;volatile
  2077  0261  0008               	return
  2078  0262                     __end_of_LED_Init:	
  2079                           
  2080                           	psect	text2
  2081  02C4                     __ptext2:	
  2082 ;; *************** function _IREF_Init *****************
  2083 ;; Defined at:
  2084 ;;		line 36 in file "iref.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;		None
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;		None
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      void 
  2091 ;; Registers used:
  2092 ;;		wreg, status,2
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2098 ;;      Params:         0       0       0       0       0       0       0       0
  2099 ;;      Locals:         0       0       0       0       0       0       0       0
  2100 ;;      Temps:          0       0       0       0       0       0       0       0
  2101 ;;      Totals:         0       0       0       0       0       0       0       0
  2102 ;;Total ram usage:        0 bytes
  2103 ;; Hardware stack levels used:    1
  2104 ;; Hardware stack levels required when called:    4
  2105 ;; This function calls:
  2106 ;;		Nothing
  2107 ;; This function is called by:
  2108 ;;		_main
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           
  2113                           ;psect for function _IREF_Init
  2114  02C4                     _IREF_Init:	
  2115                           
  2116                           ;iref.c: 38: FVRCON = 0xAA;
  2117                           
  2118                           ;incstack = 0
  2119                           ; Regs used in _IREF_Init: [wreg+status,2]
  2120  02C4  30AA               	movlw	170
  2121  02C5  0022               	movlb	2	; select bank2
  2122  02C6  0097               	movwf	23	;volatile
  2123                           
  2124                           ;iref.c: 41: DAC1CON0 = 0x88;
  2125  02C7  3088               	movlw	136
  2126  02C8  0098               	movwf	24	;volatile
  2127                           
  2128                           ;iref.c: 42: DAC1CON1 = 0x00;
  2129  02C9  0199               	clrf	25	;volatile
  2130                           
  2131                           ;iref.c: 43: OPA1CON = 0xD2;
  2132  02CA  30D2               	movlw	210
  2133  02CB  002A               	movlb	10	; select bank10
  2134  02CC  0091               	movwf	17	;volatile
  2135                           
  2136                           ;iref.c: 47: DAC2CON0 = 0x88;
  2137  02CD  3088               	movlw	136
  2138  02CE  0022               	movlb	2	; select bank2
  2139  02CF  009A               	movwf	26	;volatile
  2140                           
  2141                           ;iref.c: 48: DAC2CON1 = 0x00;
  2142  02D0  019B               	clrf	27	;volatile
  2143                           
  2144                           ;iref.c: 49: OPA2CON = 0xD1;
  2145  02D1  30D1               	movlw	209
  2146  02D2  002A               	movlb	10	; select bank10
  2147  02D3  0095               	movwf	21	;volatile
  2148  02D4  0008               	return
  2149  02D5                     __end_of_IREF_Init:	
  2150                           
  2151                           	psect	text3
  2152  02D5                     __ptext3:	
  2153 ;; *************** function _I2C_Init *****************
  2154 ;; Defined at:
  2155 ;;		line 48 in file "i2c.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;		None
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;		None
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  1    wreg      void 
  2162 ;; Registers used:
  2163 ;;		wreg, status,2
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2169 ;;      Params:         0       0       0       0       0       0       0       0
  2170 ;;      Locals:         0       0       0       0       0       0       0       0
  2171 ;;      Temps:          0       0       0       0       0       0       0       0
  2172 ;;      Totals:         0       0       0       0       0       0       0       0
  2173 ;;Total ram usage:        0 bytes
  2174 ;; Hardware stack levels used:    1
  2175 ;; Hardware stack levels required when called:    4
  2176 ;; This function calls:
  2177 ;;		Nothing
  2178 ;; This function is called by:
  2179 ;;		_main
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           
  2184                           ;psect for function _I2C_Init
  2185  02D5                     _I2C_Init:	
  2186                           
  2187                           ;i2c.c: 50: SSP1STAT = 0x00;
  2188                           
  2189                           ;incstack = 0
  2190                           ; Regs used in _I2C_Init: [wreg+status,2]
  2191  02D5  0024               	movlb	4	; select bank4
  2192  02D6  0194               	clrf	20	;volatile
  2193                           
  2194                           ;i2c.c: 51: SSP1CON1 = 0x26;
  2195  02D7  3026               	movlw	38
  2196  02D8  0095               	movwf	21	;volatile
  2197                           
  2198                           ;i2c.c: 52: SSP1CON2 = 0x01;
  2199  02D9  3001               	movlw	1
  2200  02DA  0096               	movwf	22	;volatile
  2201                           
  2202                           ;i2c.c: 53: SSP1CON3 = 0x00;
  2203  02DB  0197               	clrf	23	;volatile
  2204                           
  2205                           ;i2c.c: 54: SSP1ADD = 0x08 << 1;
  2206  02DC  3010               	movlw	16
  2207  02DD  0092               	movwf	18	;volatile
  2208                           
  2209                           ;i2c.c: 57: PIR1bits.SSP1IF = 0;
  2210  02DE  0020               	movlb	0	; select bank0
  2211  02DF  1191               	bcf	17,3	;volatile
  2212                           
  2213                           ;i2c.c: 59: PIE1bits.SSP1IE = 1;
  2214  02E0  0021               	movlb	1	; select bank1
  2215  02E1  1591               	bsf	17,3	;volatile
  2216  02E2  0008               	return
  2217  02E3                     __end_of_I2C_Init:	
  2218                           
  2219                           	psect	text4
  2220  02E3                     __ptext4:	
  2221 ;; *************** function _ADC_Init *****************
  2222 ;; Defined at:
  2223 ;;		line 43 in file "adc.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;		None
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;		None
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  1    wreg      void 
  2230 ;; Registers used:
  2231 ;;		wreg, status,2
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2237 ;;      Params:         0       0       0       0       0       0       0       0
  2238 ;;      Locals:         0       0       0       0       0       0       0       0
  2239 ;;      Temps:          0       0       0       0       0       0       0       0
  2240 ;;      Totals:         0       0       0       0       0       0       0       0
  2241 ;;Total ram usage:        0 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; Hardware stack levels required when called:    4
  2244 ;; This function calls:
  2245 ;;		Nothing
  2246 ;; This function is called by:
  2247 ;;		_main
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           
  2252                           ;psect for function _ADC_Init
  2253  02E3                     _ADC_Init:	
  2254                           
  2255                           ;adc.c: 45: ADCON0 = 0x01;
  2256                           
  2257                           ;incstack = 0
  2258                           ; Regs used in _ADC_Init: [wreg+status,2]
  2259  02E3  3001               	movlw	1
  2260  02E4  0021               	movlb	1	; select bank1
  2261  02E5  009D               	movwf	29	;volatile
  2262                           
  2263                           ;adc.c: 46: ADCON1 = 0xD0;
  2264  02E6  30D0               	movlw	208
  2265  02E7  009E               	movwf	30	;volatile
  2266                           
  2267                           ;adc.c: 47: ADCON2 = 0x00;
  2268  02E8  019F               	clrf	31	;volatile
  2269                           
  2270                           ;adc.c: 48: ADRESL = 0x00;
  2271  02E9  019B               	clrf	27	;volatile
  2272                           
  2273                           ;adc.c: 49: ADRESH = 0x00;
  2274  02EA  019C               	clrf	28	;volatile
  2275  02EB  0008               	return
  2276  02EC                     __end_of_ADC_Init:	
  2277                           
  2278                           	psect	intentry
  2279  0004                     __pintentry:	
  2280 ;; *************** function _InterruptHandler *****************
  2281 ;; Defined at:
  2282 ;;		line 128 in file "main.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;		None
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;		None
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  1    wreg      void 
  2289 ;; Registers used:
  2290 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2296 ;;      Params:         0       0       0       0       0       0       0       0
  2297 ;;      Locals:         0       0       0       0       0       0       0       0
  2298 ;;      Temps:          0       1       0       0       0       0       0       0
  2299 ;;      Totals:         0       1       0       0       0       0       0       0
  2300 ;;Total ram usage:        1 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; Hardware stack levels required when called:    3
  2303 ;; This function calls:
  2304 ;;		_I2C_InterruptHandler
  2305 ;; This function is called by:
  2306 ;;		Interrupt level 1
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310  0004                     _InterruptHandler:	
  2311                           
  2312                           ;incstack = 0
  2313  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2314                           
  2315                           ; Regs used in _InterruptHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2316  0005  3180               	pagesel	$
  2317  0006  0020               	movlb	0	; select bank0
  2318  0007  087F               	movf	127,w
  2319  0008  00ED               	movwf	??_InterruptHandler
  2320                           
  2321                           ;main.c: 129: if(INTCONbits.PEIE == 1)
  2322  0009  1F0B               	btfss	11,6	;volatile
  2323  000A  2813               	goto	i1l96
  2324                           
  2325                           ;main.c: 130: {
  2326                           ;main.c: 131: if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
  2327  000B  0021               	movlb	1	; select bank1
  2328  000C  1D91               	btfss	17,3	;volatile
  2329  000D  2813               	goto	i1l96
  2330  000E  0020               	movlb	0	; select bank0
  2331  000F  1D91               	btfss	17,3	;volatile
  2332  0010  2813               	goto	i1l96
  2333                           
  2334                           ;main.c: 132: {
  2335                           ;main.c: 133: I2C_InterruptHandler();
  2336  0011  3182  2288         	fcall	_I2C_InterruptHandler
  2337  0013                     i1l96:	
  2338  0013  0020               	movlb	0	; select bank0
  2339  0014  086D               	movf	??_InterruptHandler,w
  2340  0015  00FF               	movwf	127
  2341  0016  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2342  0017  0009               	retfie
  2343  0018                     __end_of_InterruptHandler:	
  2344                           
  2345                           	psect	text6
  2346  0288                     __ptext6:	
  2347 ;; *************** function _I2C_InterruptHandler *****************
  2348 ;; Defined at:
  2349 ;;		line 66 in file "i2c.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;		None
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;  I2C_buffer      1    4[BANK0 ] unsigned char 
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2363 ;;      Params:         0       0       0       0       0       0       0       0
  2364 ;;      Locals:         0       1       0       0       0       0       0       0
  2365 ;;      Temps:          0       1       0       0       0       0       0       0
  2366 ;;      Totals:         0       2       0       0       0       0       0       0
  2367 ;;Total ram usage:        2 bytes
  2368 ;; Hardware stack levels used:    1
  2369 ;; Hardware stack levels required when called:    2
  2370 ;; This function calls:
  2371 ;;		_I2C_Process
  2372 ;; This function is called by:
  2373 ;;		_InterruptHandler
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           
  2378                           ;psect for function _I2C_InterruptHandler
  2379  0288                     _I2C_InterruptHandler:	
  2380                           
  2381                           ;i2c.c: 67: uint8_t I2C_buffer = 0x00;
  2382                           
  2383                           ;incstack = 0
  2384                           ; Regs used in _I2C_InterruptHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2385  0288  0020               	movlb	0	; select bank0
  2386  0289  01EC               	clrf	I2C_InterruptHandler@I2C_buffer
  2387                           
  2388                           ;i2c.c: 68: PIR1bits.SSP1IF = 0;
  2389  028A  1191               	bcf	17,3	;volatile
  2390                           
  2391                           ;i2c.c: 69: I2C_buffer = SSP1BUF;
  2392  028B  0024               	movlb	4	; select bank4
  2393  028C  0811               	movf	17,w	;volatile
  2394  028D  0020               	movlb	0	; select bank0
  2395  028E  00EB               	movwf	??_I2C_InterruptHandler
  2396  028F  086B               	movf	??_I2C_InterruptHandler,w
  2397  0290  00EC               	movwf	I2C_InterruptHandler@I2C_buffer
  2398                           
  2399                           ;i2c.c: 70: if(SSP1STATbits.R_nW == 1) {
  2400  0291  0024               	movlb	4	; select bank4
  2401  0292  1D14               	btfss	20,2	;volatile
  2402  0293  2A9B               	goto	i1l142
  2403                           
  2404                           ;i2c.c: 72: if((SSP1STATbits.D_nA == 1) && (SSP1CON2bits.ACKSTAT == 1)) {
  2405  0294  1A94               	btfsc	20,5	;volatile
  2406  0295  1F16               	btfss	22,6	;volatile
  2407  0296  2A99               	goto	i1l1195
  2408                           
  2409                           ;i2c.c: 74: I2C_Process(I2C_R_COMPLETED);
  2410  0297  3003               	movlw	3
  2411  0298  2AA5               	goto	L1
  2412  0299                     i1l1195:	
  2413                           ;i2c.c: 75: } else {
  2414                           
  2415                           
  2416                           ;i2c.c: 77: I2C_Process(I2C_R_REQ);
  2417  0299  3001               	movlw	1
  2418  029A  2AA5               	goto	L1
  2419  029B                     i1l142:	
  2420                           ;i2c.c: 78: }
  2421                           ;i2c.c: 80: } else if (SSP1STATbits.D_nA == 0) {
  2422                           
  2423  029B  1A94               	btfsc	20,5	;volatile
  2424  029C  2A9F               	goto	i1l1199
  2425                           
  2426                           ;i2c.c: 82: I2C_Process(I2C_W_REQ);
  2427  029D  3000               	movlw	0
  2428  029E  2AA5               	goto	L1
  2429  029F                     i1l1199:	
  2430                           ;i2c.c: 83: } else {
  2431                           
  2432                           
  2433                           ;i2c.c: 85: I2C_wData = I2C_buffer;
  2434  029F  0020               	movlb	0	; select bank0
  2435  02A0  086C               	movf	I2C_InterruptHandler@I2C_buffer,w
  2436  02A1  00EB               	movwf	??_I2C_InterruptHandler
  2437  02A2  086B               	movf	??_I2C_InterruptHandler,w
  2438  02A3  00E7               	movwf	_I2C_wData	;volatile
  2439                           
  2440                           ;i2c.c: 86: I2C_Process(I2C_W_DATA);
  2441  02A4  3002               	movlw	2
  2442  02A5                     L1:	
  2443  02A5  3180  2025         	fcall	_I2C_Process
  2444                           
  2445                           ;i2c.c: 87: }
  2446                           ;i2c.c: 88: SSP1CON1bits.CKP = 1;
  2447  02A7  0024               	movlb	4	; select bank4
  2448  02A8  1615               	bsf	21,4	;volatile
  2449  02A9  0008               	return
  2450  02AA                     __end_of_I2C_InterruptHandler:	
  2451                           
  2452                           	psect	text7
  2453  0025                     __ptext7:	
  2454 ;; *************** function _I2C_Process *****************
  2455 ;; Defined at:
  2456 ;;		line 94 in file "i2c.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;  i2c_bus_stat    1    wreg     enum E6228
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  i2c_bus_stat    1   13[COMMON] enum E6228
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      void 
  2463 ;; Registers used:
  2464 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2470 ;;      Params:         0       0       0       0       0       0       0       0
  2471 ;;      Locals:         1       0       0       0       0       0       0       0
  2472 ;;      Temps:          0       3       0       0       0       0       0       0
  2473 ;;      Totals:         1       3       0       0       0       0       0       0
  2474 ;;Total ram usage:        4 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:    1
  2477 ;; This function calls:
  2478 ;;		_ADC_ProcessCapture
  2479 ;;		_IREF_SetOutput
  2480 ;;		_LED_Get_DutyCycle
  2481 ;;		_LED_Set_DutyCycle
  2482 ;;		__get_significant
  2483 ;; This function is called by:
  2484 ;;		_I2C_InterruptHandler
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           
  2489                           ;psect for function _I2C_Process
  2490  0025                     _I2C_Process:	
  2491                           
  2492                           ;incstack = 0
  2493                           ; Regs used in _I2C_Process: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2494                           ;I2C_Process@i2c_bus_state stored from wreg
  2495  0025  00FD               	movwf	I2C_Process@i2c_bus_state
  2496                           
  2497                           ;i2c.c: 95: static uint8_t address = 0;
  2498                           ;i2c.c: 96: static uint8_t writeType = I2C_DATA;
  2499                           ;i2c.c: 97: static bool LSB_nMSB = 0;
  2500                           ;i2c.c: 98: static uint16_t data = 0;
  2501                           ;i2c.c: 100: switch (i2c_bus_state)
  2502  0026  28FA               	goto	i1l1113
  2503  0027                     i1l160:	
  2504                           ;i2c.c: 101: {
  2505                           ;i2c.c: 102: case I2C_W_REQ:
  2506                           
  2507                           
  2508                           ;i2c.c: 104: writeType = I2C_DATA_ADDRESS;
  2509  0027  0020               	movlb	0	; select bank0
  2510  0028  01E5               	clrf	I2C_Process@writeType
  2511  0029  0AE5               	incf	I2C_Process@writeType,f
  2512                           
  2513                           ;i2c.c: 105: break;
  2514  002A  0008               	return
  2515  002B                     i1l1051:	
  2516                           ;i2c.c: 109: {
  2517                           ;i2c.c: 110: case I2C_DATA_ADDRESS:
  2518                           
  2519                           ;i2c.c: 108: switch(writeType)
  2520                           
  2521                           ;i2c.c: 106: case I2C_W_DATA:
  2522                           
  2523                           
  2524                           ;i2c.c: 112: address = I2C_wData;
  2525  002B  0867               	movf	_I2C_wData,w	;volatile
  2526  002C  00E8               	movwf	??_I2C_Process
  2527  002D  0868               	movf	??_I2C_Process,w
  2528  002E  00E6               	movwf	I2C_Process@address
  2529                           
  2530                           ;i2c.c: 113: LSB_nMSB = 1;
  2531  002F  01E4               	clrf	I2C_Process@LSB_nMSB
  2532  0030  0AE4               	incf	I2C_Process@LSB_nMSB,f
  2533                           
  2534                           ;i2c.c: 114: break;
  2535  0031  288A               	goto	i1l1079
  2536  0032                     i1l1055:	
  2537                           ;i2c.c: 115: case I2C_DATA:
  2538                           
  2539                           
  2540                           ;i2c.c: 117: if (LSB_nMSB) {
  2541  0032  0864               	movf	I2C_Process@LSB_nMSB,w
  2542  0033  1903               	btfsc	3,2
  2543  0034  283D               	goto	i1l1059
  2544                           
  2545                           ;i2c.c: 119: data = I2C_wData;
  2546  0035  0867               	movf	_I2C_wData,w	;volatile
  2547  0036  00E8               	movwf	??_I2C_Process
  2548  0037  01E9               	clrf	??_I2C_Process+1
  2549  0038  0868               	movf	??_I2C_Process,w
  2550  0039  00E2               	movwf	I2C_Process@data
  2551  003A  0869               	movf	??_I2C_Process+1,w
  2552  003B  00E3               	movwf	I2C_Process@data+1
  2553                           
  2554                           ;i2c.c: 120: } else {
  2555  003C  2876               	goto	i1l1073
  2556  003D                     i1l1059:	
  2557                           
  2558                           ;i2c.c: 122: data = data + ((uint16_t)I2C_wData << 8);
  2559  003D  0867               	movf	_I2C_wData,w	;volatile
  2560  003E  00E8               	movwf	??_I2C_Process
  2561  003F  01E9               	clrf	??_I2C_Process+1
  2562  0040  0868               	movf	??_I2C_Process,w
  2563  0041  00E9               	movwf	??_I2C_Process+1
  2564  0042  01E8               	clrf	??_I2C_Process
  2565  0043  0862               	movf	I2C_Process@data,w
  2566  0044  0768               	addwf	??_I2C_Process,w
  2567  0045  00E2               	movwf	I2C_Process@data
  2568  0046  0863               	movf	I2C_Process@data+1,w
  2569  0047  3D69               	addwfc	??_I2C_Process+1,w
  2570  0048  00E3               	movwf	I2C_Process@data+1
  2571                           
  2572                           ;i2c.c: 124: if (address == 0x21) {
  2573  0049  3021               	movlw	33
  2574  004A  0666               	xorwf	I2C_Process@address,w
  2575  004B  1D03               	btfss	3,2
  2576  004C  2856               	goto	i1l1063
  2577                           
  2578                           ;i2c.c: 126: IREF_SetOutput(0x1, data);
  2579  004D  0863               	movf	I2C_Process@data+1,w
  2580  004E  00F1               	movwf	IREF_SetOutput@value+1
  2581  004F  0862               	movf	I2C_Process@data,w
  2582  0050  00F0               	movwf	IREF_SetOutput@value
  2583  0051  3001               	movlw	1
  2584  0052  3182  2262  3180   	fcall	_IREF_SetOutput
  2585                           
  2586                           ;i2c.c: 127: } else if (address == 0x22) {
  2587  0055  2876               	goto	i1l1073
  2588  0056                     i1l1063:	
  2589  0056  3022               	movlw	34
  2590  0057  0020               	movlb	0	; select bank0
  2591  0058  0666               	xorwf	I2C_Process@address,w
  2592  0059  1D03               	btfss	3,2
  2593  005A  2864               	goto	i1l1067
  2594                           
  2595                           ;i2c.c: 129: IREF_SetOutput(0x2, data);
  2596  005B  0863               	movf	I2C_Process@data+1,w
  2597  005C  00F1               	movwf	IREF_SetOutput@value+1
  2598  005D  0862               	movf	I2C_Process@data,w
  2599  005E  00F0               	movwf	IREF_SetOutput@value
  2600  005F  3002               	movlw	2
  2601  0060  3182  2262  3180   	fcall	_IREF_SetOutput
  2602                           
  2603                           ;i2c.c: 130: } else if ((address >= 0x30) && (address <= 0x33)) {
  2604  0063  2876               	goto	i1l1073
  2605  0064                     i1l1067:	
  2606  0064  3030               	movlw	48
  2607  0065  0020               	movlb	0	; select bank0
  2608  0066  0266               	subwf	I2C_Process@address,w
  2609  0067  1C03               	skipc
  2610  0068  2876               	goto	i1l1073
  2611  0069  3034               	movlw	52
  2612  006A  0266               	subwf	I2C_Process@address,w
  2613  006B  1803               	skipnc
  2614  006C  2876               	goto	i1l1073
  2615                           
  2616                           ;i2c.c: 132: LED_Set_DutyCycle(address - 0x30, data);
  2617  006D  0863               	movf	I2C_Process@data+1,w
  2618  006E  00F1               	movwf	LED_Set_DutyCycle@dutycycle+1
  2619  006F  0862               	movf	I2C_Process@data,w
  2620  0070  00F0               	movwf	LED_Set_DutyCycle@dutycycle
  2621  0071  0866               	movf	I2C_Process@address,w
  2622  0072  3ED0               	addlw	208
  2623  0073  3181  2109  3180   	fcall	_LED_Set_DutyCycle
  2624  0076                     i1l1073:	
  2625                           
  2626                           ;i2c.c: 133: }
  2627                           ;i2c.c: 134: }
  2628                           ;i2c.c: 135: LSB_nMSB = LSB_nMSB ? 0 : 1;
  2629  0076  0020               	movlb	0	; select bank0
  2630  0077  0864               	movf	I2C_Process@LSB_nMSB,w
  2631  0078  1D03               	btfss	3,2
  2632  0079  287C               	goto	u61_20
  2633  007A  3001               	movlw	1
  2634  007B  287D               	goto	u62_20
  2635  007C                     u61_20:	
  2636  007C  3000               	movlw	0
  2637  007D                     u62_20:	
  2638  007D  00E8               	movwf	??_I2C_Process
  2639  007E  0868               	movf	??_I2C_Process,w
  2640  007F  00E4               	movwf	I2C_Process@LSB_nMSB
  2641                           
  2642                           ;i2c.c: 137: }
  2643                           
  2644                           ;i2c.c: 136: break;
  2645  0080  288A               	goto	i1l1079
  2646  0081                     i1l1077:	
  2647  0081  0020               	movlb	0	; select bank0
  2648  0082  0865               	movf	I2C_Process@writeType,w
  2649                           
  2650                           ; Switch size 1, requested type "space"
  2651                           ; Number of cases is 2, Range of values is 0 to 1
  2652                           ; switch strategies available:
  2653                           ; Name         Instructions Cycles
  2654                           ; simple_byte            7     4 (average)
  2655                           ; direct_byte           10     6 (fixed)
  2656                           ; jumptable            260     6 (fixed)
  2657                           ;	Chosen strategy is simple_byte
  2658  0083  3A00               	xorlw	0	; case 0
  2659  0084  1903               	skipnz
  2660  0085  2832               	goto	i1l1055
  2661  0086  3A01               	xorlw	1	; case 1
  2662  0087  1903               	skipnz
  2663  0088  282B               	goto	i1l1051
  2664  0089  288A               	goto	i1l1079
  2665  008A                     i1l1079:	
  2666                           
  2667                           ;i2c.c: 138: writeType = I2C_DATA;
  2668  008A  01E5               	clrf	I2C_Process@writeType
  2669                           
  2670                           ;i2c.c: 139: break;
  2671  008B  0008               	return
  2672  008C                     i1l1081:	
  2673                           ;i2c.c: 140: case I2C_R_REQ:
  2674                           
  2675                           
  2676                           ;i2c.c: 141: if (address == 0xFF) {
  2677  008C  0020               	movlb	0	; select bank0
  2678  008D  0A66               	incf	I2C_Process@address,w
  2679  008E  1D03               	btfss	3,2
  2680  008F  2894               	goto	i1l1085
  2681                           
  2682                           ;i2c.c: 143: SSP1BUF = _get_significant(0x4F47, LSB_nMSB);
  2683  0090  3047               	movlw	71
  2684  0091  00FA               	movwf	__get_significant@value
  2685  0092  304F               	movlw	79
  2686  0093  289C               	goto	L12
  2687  0094                     i1l1085:	
  2688                           ;i2c.c: 144: } else if (address == 0xFE) {
  2689                           
  2690  0094  30FE               	movlw	254
  2691  0095  0020               	movlb	0	; select bank0
  2692  0096  0666               	xorwf	I2C_Process@address,w
  2693  0097  1D03               	btfss	3,2
  2694  0098  289E               	goto	i1l1089
  2695                           
  2696                           ;i2c.c: 146: SSP1BUF = _get_significant(0x0103, LSB_nMSB);
  2697  0099  3003               	movlw	3
  2698  009A  00FA               	movwf	__get_significant@value
  2699  009B  3001               	movlw	1
  2700  009C                     L12:	
  2701  009C  00FB               	movwf	__get_significant@value+1
  2702  009D  28E6               	goto	L8
  2703  009E                     i1l1089:	
  2704                           ;i2c.c: 147: } else if ((address >= 0x00) && (address <= 0x1F)) {
  2705                           
  2706  009E  3020               	movlw	32
  2707  009F  0020               	movlb	0	; select bank0
  2708  00A0  0266               	subwf	I2C_Process@address,w
  2709  00A1  1803               	skipnc
  2710  00A2  28B4               	goto	i1l1095
  2711                           
  2712                           ;i2c.c: 149: if (LSB_nMSB) {
  2713  00A3  0864               	movf	I2C_Process@LSB_nMSB,w
  2714  00A4  1903               	btfsc	3,2
  2715  00A5  28AF               	goto	i1l180
  2716                           
  2717                           ;i2c.c: 150: data = ADC_ProcessCapture(address);
  2718  00A6  0866               	movf	I2C_Process@address,w
  2719  00A7  3182  22AA  3180   	fcall	_ADC_ProcessCapture
  2720  00AA  0871               	movf	?_ADC_ProcessCapture+1,w
  2721  00AB  0020               	movlb	0	; select bank0
  2722  00AC  00E3               	movwf	I2C_Process@data+1
  2723  00AD  0870               	movf	?_ADC_ProcessCapture,w
  2724  00AE  00E2               	movwf	I2C_Process@data
  2725  00AF                     i1l180:	
  2726                           
  2727                           ;i2c.c: 151: }
  2728                           ;i2c.c: 152: SSP1BUF = _get_significant(data, LSB_nMSB);
  2729  00AF  0863               	movf	I2C_Process@data+1,w
  2730  00B0  00FB               	movwf	__get_significant@value+1
  2731  00B1  0862               	movf	I2C_Process@data,w
  2732  00B2  00FA               	movwf	__get_significant@value
  2733  00B3  28E6               	goto	L8
  2734  00B4                     i1l1095:	
  2735                           ;i2c.c: 153: } else if (address == 0x21) {
  2736                           
  2737  00B4  3021               	movlw	33
  2738  00B5  0020               	movlb	0	; select bank0
  2739  00B6  0666               	xorwf	I2C_Process@address,w
  2740  00B7  1D03               	btfss	3,2
  2741  00B8  28BC               	goto	i1l1099
  2742                           
  2743                           ;i2c.c: 155: SSP1BUF = _get_significant(DAC1CON1, LSB_nMSB);
  2744  00B9  0022               	movlb	2	; select bank2
  2745  00BA  0819               	movf	25,w	;volatile
  2746  00BB  28C3               	goto	L10
  2747  00BC                     i1l1099:	
  2748                           ;i2c.c: 156: } else if (address == 0x22) {
  2749                           
  2750  00BC  3022               	movlw	34
  2751  00BD  0020               	movlb	0	; select bank0
  2752  00BE  0666               	xorwf	I2C_Process@address,w
  2753  00BF  1D03               	btfss	3,2
  2754  00C0  28CE               	goto	i1l1103
  2755                           
  2756                           ;i2c.c: 158: SSP1BUF = _get_significant(DAC2CON1, LSB_nMSB);
  2757  00C1  0022               	movlb	2	; select bank2
  2758  00C2  081B               	movf	27,w	;volatile
  2759  00C3                     L10:	
  2760  00C3  0020               	movlb	0	; select bank0
  2761  00C4  00E8               	movwf	??_I2C_Process
  2762  00C5  01E9               	clrf	??_I2C_Process+1
  2763  00C6  0868               	movf	??_I2C_Process,w
  2764  00C7  00FA               	movwf	__get_significant@value
  2765  00C8  0869               	movf	??_I2C_Process+1,w
  2766  00C9  00FB               	movwf	__get_significant@value+1
  2767  00CA  0864               	movf	I2C_Process@LSB_nMSB,w
  2768  00CB  00EA               	movwf	??_I2C_Process+2
  2769  00CC  086A               	movf	??_I2C_Process+2,w
  2770  00CD  28E9               	goto	L9
  2771  00CE                     i1l1103:	
  2772                           ;i2c.c: 159: } else if ((address >= 0x30) && (address <= 0x33)) {
  2773                           
  2774  00CE  3030               	movlw	48
  2775  00CF  0020               	movlb	0	; select bank0
  2776  00D0  0266               	subwf	I2C_Process@address,w
  2777  00D1  1C03               	skipc
  2778  00D2  28E1               	goto	i1l1109
  2779  00D3  3034               	movlw	52
  2780  00D4  0266               	subwf	I2C_Process@address,w
  2781  00D5  1803               	skipnc
  2782  00D6  28E1               	goto	i1l1109
  2783                           
  2784                           ;i2c.c: 161: SSP1BUF = _get_significant(LED_Get_DutyCycle(address - 0x30), LSB_nMSB);
  2785  00D7  0866               	movf	I2C_Process@address,w
  2786  00D8  3ED0               	addlw	208
  2787  00D9  3181  21DD  3180   	fcall	_LED_Get_DutyCycle
  2788  00DC  0871               	movf	?_LED_Get_DutyCycle+1,w
  2789  00DD  00FB               	movwf	__get_significant@value+1
  2790  00DE  0870               	movf	?_LED_Get_DutyCycle,w
  2791  00DF  00FA               	movwf	__get_significant@value
  2792  00E0  28E5               	goto	L11
  2793  00E1                     i1l1109:	
  2794                           ;i2c.c: 162: } else {
  2795                           
  2796                           
  2797                           ;i2c.c: 164: SSP1BUF = _get_significant(0xDEAD, LSB_nMSB);
  2798  00E1  30AD               	movlw	173
  2799  00E2  00FA               	movwf	__get_significant@value
  2800  00E3  30DE               	movlw	222
  2801  00E4  00FB               	movwf	__get_significant@value+1
  2802  00E5                     L11:	
  2803  00E5  0020               	movlb	0	; select bank0
  2804  00E6                     L8:	
  2805  00E6  0864               	movf	I2C_Process@LSB_nMSB,w
  2806  00E7  00E8               	movwf	??_I2C_Process
  2807  00E8  0868               	movf	??_I2C_Process,w
  2808  00E9                     L9:	
  2809  00E9  00FC               	movwf	__get_significant@LSB_nMSB
  2810  00EA  3182  22EC  3180   	fcall	__get_significant
  2811  00ED  0024               	movlb	4	; select bank4
  2812  00EE  0091               	movwf	17	;volatile
  2813                           
  2814                           ;i2c.c: 165: }
  2815                           ;i2c.c: 166: LSB_nMSB = LSB_nMSB ? 0 : 1;
  2816  00EF  0020               	movlb	0	; select bank0
  2817  00F0  0864               	movf	I2C_Process@LSB_nMSB,w
  2818  00F1  1D03               	btfss	3,2
  2819  00F2  28F5               	goto	u71_20
  2820  00F3  3001               	movlw	1
  2821  00F4  28F6               	goto	u72_20
  2822  00F5                     u71_20:	
  2823  00F5  3000               	movlw	0
  2824  00F6                     u72_20:	
  2825  00F6  00E8               	movwf	??_I2C_Process
  2826  00F7  0868               	movf	??_I2C_Process,w
  2827  00F8  00E4               	movwf	I2C_Process@LSB_nMSB
  2828                           
  2829                           ;i2c.c: 170: }
  2830                           
  2831                           ;i2c.c: 169: default:;
  2832                           
  2833                           ;i2c.c: 168: case I2C_R_COMPLETED:
  2834                           
  2835                           ;i2c.c: 167: break;
  2836  00F9  0008               	return
  2837  00FA                     i1l1113:	
  2838  00FA  087D               	movf	I2C_Process@i2c_bus_state,w
  2839                           
  2840                           ; Switch size 1, requested type "space"
  2841                           ; Number of cases is 4, Range of values is 0 to 3
  2842                           ; switch strategies available:
  2843                           ; Name         Instructions Cycles
  2844                           ; simple_byte           13     7 (average)
  2845                           ; direct_byte           14     6 (fixed)
  2846                           ; jumptable            260     6 (fixed)
  2847                           ;	Chosen strategy is simple_byte
  2848  00FB  3A00               	xorlw	0	; case 0
  2849  00FC  1903               	skipnz
  2850  00FD  2827               	goto	i1l160
  2851  00FE  3A01               	xorlw	1	; case 1
  2852  00FF  1903               	skipnz
  2853  0100  288C               	goto	i1l1081
  2854  0101  3A03               	xorlw	3	; case 2
  2855  0102  1903               	skipnz
  2856  0103  2881               	goto	i1l1077
  2857  0104  3A01               	xorlw	1	; case 3
  2858  0105  1903               	skipnz
  2859  0106  2908               	goto	i1l190
  2860  0107  2908               	goto	i1l190
  2861  0108                     i1l190:	
  2862  0108  0008               	return
  2863  0109                     __end_of_I2C_Process:	
  2864                           
  2865                           	psect	text8
  2866  02EC                     __ptext8:	
  2867 ;; *************** function __get_significant *****************
  2868 ;; Defined at:
  2869 ;;		line 177 in file "i2c.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;  value           2   10[COMMON] unsigned int 
  2872 ;;  LSB_nMSB        1   12[COMMON] unsigned char 
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;		None
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1    wreg      unsigned char 
  2877 ;; Registers used:
  2878 ;;		wreg, status,2, status,0
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2884 ;;      Params:         3       0       0       0       0       0       0       0
  2885 ;;      Locals:         0       0       0       0       0       0       0       0
  2886 ;;      Temps:          0       0       0       0       0       0       0       0
  2887 ;;      Totals:         3       0       0       0       0       0       0       0
  2888 ;;Total ram usage:        3 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_I2C_Process
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           
  2898                           ;psect for function __get_significant
  2899  02EC                     __get_significant:	
  2900                           
  2901                           ;i2c.c: 178: if (LSB_nMSB) {
  2902                           
  2903                           ;incstack = 0
  2904                           ; Regs used in __get_significant: [wreg+status,2+status,0]
  2905  02EC  087C               	movf	__get_significant@LSB_nMSB,w
  2906  02ED  1903               	btfsc	3,2
  2907  02EE  2AF1               	goto	i1l1013
  2908                           
  2909                           ;i2c.c: 180: return (uint8_t)(value & 0x00FF);
  2910  02EF  087A               	movf	__get_significant@value,w
  2911                           
  2912                           ;i2c.c: 181: } else {
  2913  02F0  0008               	return
  2914  02F1                     i1l1013:	
  2915                           
  2916                           ;i2c.c: 183: return (uint8_t)((value & 0xFF00) >> 8);
  2917  02F1  087B               	movf	__get_significant@value+1,w
  2918  02F2  0008               	return
  2919  02F3                     __end_of__get_significant:	
  2920                           
  2921                           	psect	text9
  2922  0109                     __ptext9:	
  2923 ;; *************** function _LED_Set_DutyCycle *****************
  2924 ;; Defined at:
  2925 ;;		line 71 in file "leds.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  led             1    wreg     unsigned char 
  2928 ;;  dutycycle       2    0[COMMON] unsigned int 
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;  led             1    4[COMMON] unsigned char 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  1    wreg      void 
  2933 ;; Registers used:
  2934 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2940 ;;      Params:         2       0       0       0       0       0       0       0
  2941 ;;      Locals:         1       0       0       0       0       0       0       0
  2942 ;;      Temps:          2       0       0       0       0       0       0       0
  2943 ;;      Totals:         5       0       0       0       0       0       0       0
  2944 ;;Total ram usage:        5 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_I2C_Process
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           
  2954                           ;psect for function _LED_Set_DutyCycle
  2955  0109                     _LED_Set_DutyCycle:	
  2956                           
  2957                           ;incstack = 0
  2958                           ; Regs used in _LED_Set_DutyCycle: [wreg-fsr0h+status,2+status,0]
  2959                           ;LED_Set_DutyCycle@led stored from wreg
  2960  0109  00F4               	movwf	LED_Set_DutyCycle@led
  2961                           
  2962                           ;leds.c: 72: if (dutycycle > 0x3FF) {
  2963  010A  3004               	movlw	4
  2964  010B  0271               	subwf	LED_Set_DutyCycle@dutycycle+1,w
  2965  010C  3000               	movlw	0
  2966  010D  1903               	skipnz
  2967  010E  0270               	subwf	LED_Set_DutyCycle@dutycycle,w
  2968  010F  1C03               	skipc
  2969  0110  2970               	goto	i1l1003
  2970                           
  2971                           ;leds.c: 73: dutycycle = 0x3FF;
  2972  0111  30FF               	movlw	255
  2973  0112  00F0               	movwf	LED_Set_DutyCycle@dutycycle
  2974  0113  3003               	movlw	3
  2975  0114  00F1               	movwf	LED_Set_DutyCycle@dutycycle+1
  2976                           
  2977                           ;leds.c: 74: }
  2978                           ;leds.c: 75: switch (led)
  2979  0115  2970               	goto	i1l1003
  2980  0116                     i1l995:	
  2981                           ;leds.c: 76: {
  2982                           ;leds.c: 77: case 0x0:
  2983                           
  2984                           
  2985                           ;leds.c: 78: PWM3DCH = (uint8_t)((dutycycle & 0x3FC) >> 2);
  2986  0116  0871               	movf	LED_Set_DutyCycle@dutycycle+1,w
  2987  0117  00F3               	movwf	??_LED_Set_DutyCycle+1
  2988  0118  0870               	movf	LED_Set_DutyCycle@dutycycle,w
  2989  0119  00F2               	movwf	??_LED_Set_DutyCycle
  2990  011A  36F3               	lsrf	??_LED_Set_DutyCycle+1,f
  2991  011B  0CF2               	rrf	??_LED_Set_DutyCycle,f
  2992  011C  36F3               	lsrf	??_LED_Set_DutyCycle+1,f
  2993  011D  0CF2               	rrf	??_LED_Set_DutyCycle,f
  2994  011E  0872               	movf	??_LED_Set_DutyCycle,w
  2995  011F  002C               	movlb	12	; select bank12
  2996  0120  0098               	movwf	24	;volatile
  2997                           
  2998                           ;leds.c: 79: PWM3DCL = (uint8_t)((dutycycle & 0x003) << 6);
  2999  0121  0870               	movf	LED_Set_DutyCycle@dutycycle,w
  3000  0122  3903               	andlw	3
  3001  0123  00F2               	movwf	??_LED_Set_DutyCycle
  3002  0124  3005               	movlw	5
  3003  0125                     u46_25:	
  3004  0125  35F2               	lslf	??_LED_Set_DutyCycle,f
  3005  0126  3EFF               	addlw	-1
  3006  0127  1D03               	skipz
  3007  0128  2925               	goto	u46_25
  3008  0129  3572               	lslf	??_LED_Set_DutyCycle,w
  3009  012A  0097               	movwf	23	;volatile
  3010                           
  3011                           ;leds.c: 80: break;
  3012  012B  0008               	return
  3013  012C                     i1l997:	
  3014                           ;leds.c: 81: case 0x1:
  3015                           
  3016                           
  3017                           ;leds.c: 82: PWM4DCH = (uint8_t)((dutycycle & 0x3FC) >> 2);
  3018  012C  0871               	movf	LED_Set_DutyCycle@dutycycle+1,w
  3019  012D  00F3               	movwf	??_LED_Set_DutyCycle+1
  3020  012E  0870               	movf	LED_Set_DutyCycle@dutycycle,w
  3021  012F  00F2               	movwf	??_LED_Set_DutyCycle
  3022  0130  36F3               	lsrf	??_LED_Set_DutyCycle+1,f
  3023  0131  0CF2               	rrf	??_LED_Set_DutyCycle,f
  3024  0132  36F3               	lsrf	??_LED_Set_DutyCycle+1,f
  3025  0133  0CF2               	rrf	??_LED_Set_DutyCycle,f
  3026  0134  0872               	movf	??_LED_Set_DutyCycle,w
  3027  0135  002C               	movlb	12	; select bank12
  3028  0136  009B               	movwf	27	;volatile
  3029                           
  3030                           ;leds.c: 83: PWM4DCL = (uint8_t)((dutycycle & 0x003) << 6);
  3031  0137  0870               	movf	LED_Set_DutyCycle@dutycycle,w
  3032  0138  3903               	andlw	3
  3033  0139  00F2               	movwf	??_LED_Set_DutyCycle
  3034  013A  3005               	movlw	5
  3035  013B                     u47_25:	
  3036  013B  35F2               	lslf	??_LED_Set_DutyCycle,f
  3037  013C  3EFF               	addlw	-1
  3038  013D  1D03               	skipz
  3039  013E  293B               	goto	u47_25
  3040  013F  3572               	lslf	??_LED_Set_DutyCycle,w
  3041  0140  009A               	movwf	26	;volatile
  3042                           
  3043                           ;leds.c: 84: break;
  3044  0141  0008               	return
  3045  0142                     i1l999:	
  3046                           ;leds.c: 85: case 0x2:
  3047                           
  3048                           
  3049                           ;leds.c: 86: CCPR2L = (uint8_t)((dutycycle & 0x3FC) >> 2);
  3050  0142  0871               	movf	LED_Set_DutyCycle@dutycycle+1,w
  3051  0143  00F3               	movwf	??_LED_Set_DutyCycle+1
  3052  0144  0870               	movf	LED_Set_DutyCycle@dutycycle,w
  3053  0145  00F2               	movwf	??_LED_Set_DutyCycle
  3054  0146  36F3               	lsrf	??_LED_Set_DutyCycle+1,f
  3055  0147  0CF2               	rrf	??_LED_Set_DutyCycle,f
  3056  0148  36F3               	lsrf	??_LED_Set_DutyCycle+1,f
  3057  0149  0CF2               	rrf	??_LED_Set_DutyCycle,f
  3058  014A  0872               	movf	??_LED_Set_DutyCycle,w
  3059  014B  0025               	movlb	5	; select bank5
  3060  014C  0098               	movwf	24	;volatile
  3061                           
  3062                           ;leds.c: 87: CCP2CON = (uint8_t)((CCP2CON & 0xCF) | (uint8_t)((dutycycle & 0x003) << 4))
      +                          ;
  3063  014D  0870               	movf	LED_Set_DutyCycle@dutycycle,w
  3064  014E  3903               	andlw	3
  3065  014F  00F2               	movwf	??_LED_Set_DutyCycle
  3066  0150  3004               	movlw	4
  3067  0151                     u48_25:	
  3068  0151  35F2               	lslf	??_LED_Set_DutyCycle,f
  3069  0152  0B89               	decfsz	9,f
  3070  0153  2951               	goto	u48_25
  3071  0154  081A               	movf	26,w	;volatile
  3072  0155  39CF               	andlw	207
  3073  0156  0472               	iorwf	??_LED_Set_DutyCycle,w
  3074  0157  009A               	movwf	26	;volatile
  3075                           
  3076                           ;leds.c: 88: break;
  3077  0158  0008               	return
  3078  0159                     i1l1001:	
  3079                           ;leds.c: 89: case 0x3:
  3080                           
  3081                           
  3082                           ;leds.c: 90: CCPR1L = (uint8_t)((dutycycle & 0x3FC) >> 2);
  3083  0159  0871               	movf	LED_Set_DutyCycle@dutycycle+1,w
  3084  015A  00F3               	movwf	??_LED_Set_DutyCycle+1
  3085  015B  0870               	movf	LED_Set_DutyCycle@dutycycle,w
  3086  015C  00F2               	movwf	??_LED_Set_DutyCycle
  3087  015D  36F3               	lsrf	??_LED_Set_DutyCycle+1,f
  3088  015E  0CF2               	rrf	??_LED_Set_DutyCycle,f
  3089  015F  36F3               	lsrf	??_LED_Set_DutyCycle+1,f
  3090  0160  0CF2               	rrf	??_LED_Set_DutyCycle,f
  3091  0161  0872               	movf	??_LED_Set_DutyCycle,w
  3092  0162  0025               	movlb	5	; select bank5
  3093  0163  0091               	movwf	17	;volatile
  3094                           
  3095                           ;leds.c: 91: CCP1CON = (uint8_t)((CCP1CON & 0xCF) | (uint8_t)((dutycycle & 0x003) << 4))
      +                          ;
  3096  0164  0870               	movf	LED_Set_DutyCycle@dutycycle,w
  3097  0165  3903               	andlw	3
  3098  0166  00F2               	movwf	??_LED_Set_DutyCycle
  3099  0167  3004               	movlw	4
  3100  0168                     u49_25:	
  3101  0168  35F2               	lslf	??_LED_Set_DutyCycle,f
  3102  0169  0B89               	decfsz	9,f
  3103  016A  2968               	goto	u49_25
  3104  016B  0813               	movf	19,w	;volatile
  3105  016C  39CF               	andlw	207
  3106  016D  0472               	iorwf	??_LED_Set_DutyCycle,w
  3107  016E  0093               	movwf	19	;volatile
  3108                           
  3109                           ;leds.c: 94: }
  3110                           
  3111                           ;leds.c: 93: default:;
  3112                           
  3113                           ;leds.c: 92: break;
  3114  016F  0008               	return
  3115  0170                     i1l1003:	
  3116  0170  0874               	movf	LED_Set_DutyCycle@led,w
  3117                           
  3118                           ; Switch size 1, requested type "space"
  3119                           ; Number of cases is 4, Range of values is 0 to 3
  3120                           ; switch strategies available:
  3121                           ; Name         Instructions Cycles
  3122                           ; simple_byte           13     7 (average)
  3123                           ; direct_byte           14     6 (fixed)
  3124                           ; jumptable            260     6 (fixed)
  3125                           ;	Chosen strategy is simple_byte
  3126  0171  3A00               	xorlw	0	; case 0
  3127  0172  1903               	skipnz
  3128  0173  2916               	goto	i1l995
  3129  0174  3A01               	xorlw	1	; case 1
  3130  0175  1903               	skipnz
  3131  0176  292C               	goto	i1l997
  3132  0177  3A03               	xorlw	3	; case 2
  3133  0178  1903               	skipnz
  3134  0179  2942               	goto	i1l999
  3135  017A  3A01               	xorlw	1	; case 3
  3136  017B  1903               	skipnz
  3137  017C  2959               	goto	i1l1001
  3138  017D  297E               	goto	i1l241
  3139  017E                     i1l241:	
  3140  017E  0008               	return
  3141  017F                     __end_of_LED_Set_DutyCycle:	
  3142                           
  3143                           	psect	text10
  3144  01DD                     __ptext10:	
  3145 ;; *************** function _LED_Get_DutyCycle *****************
  3146 ;; Defined at:
  3147 ;;		line 100 in file "leds.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;  led             1    wreg     unsigned char 
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;  led             1    9[COMMON] unsigned char 
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  2    0[COMMON] unsigned int 
  3154 ;; Registers used:
  3155 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3161 ;;      Params:         2       0       0       0       0       0       0       0
  3162 ;;      Locals:         1       0       0       0       0       0       0       0
  3163 ;;      Temps:          7       0       0       0       0       0       0       0
  3164 ;;      Totals:        10       0       0       0       0       0       0       0
  3165 ;;Total ram usage:       10 bytes
  3166 ;; Hardware stack levels used:    1
  3167 ;; This function calls:
  3168 ;;		Nothing
  3169 ;; This function is called by:
  3170 ;;		_I2C_Process
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174                           
  3175                           ;psect for function _LED_Get_DutyCycle
  3176  01DD                     _LED_Get_DutyCycle:	
  3177                           
  3178                           ;incstack = 0
  3179                           ; Regs used in _LED_Get_DutyCycle: [wreg-fsr0h+status,2+status,0]
  3180                           ;LED_Get_DutyCycle@led stored from wreg
  3181  01DD  00F9               	movwf	LED_Get_DutyCycle@led
  3182                           
  3183                           ;leds.c: 101: static uint16_t value = 0;
  3184                           ;leds.c: 102: switch (led)
  3185  01DE  2A24               	goto	i1l1043
  3186  01DF                     i1l1031:	
  3187                           ;leds.c: 103: {
  3188                           ;leds.c: 104: case 0x0:
  3189                           
  3190                           
  3191                           ;leds.c: 105: value = (((uint16_t)PWM3DCH) << 2) + (uint16_t)(PWM3DCL >> 6);
  3192  01DF  002C               	movlb	12	; select bank12
  3193  01E0  0817               	movf	23,w	;volatile
  3194  01E1  00F2               	movwf	??_LED_Get_DutyCycle
  3195  01E2  3006               	movlw	6
  3196  01E3                     u52_25:	
  3197  01E3  36F2               	lsrf	??_LED_Get_DutyCycle,f
  3198  01E4  0B89               	decfsz	9,f
  3199  01E5  29E3               	goto	u52_25
  3200  01E6  0872               	movf	??_LED_Get_DutyCycle,w
  3201  01E7  29FD               	goto	L17
  3202  01E8                     i1l1033:	
  3203                           ;leds.c: 107: case 0x1:
  3204                           
  3205                           ;leds.c: 106: break;
  3206                           
  3207                           
  3208                           ;leds.c: 108: value = (((uint16_t)PWM4DCH) << 2) + (uint16_t)(PWM4DCL >> 6);
  3209  01E8  002C               	movlb	12	; select bank12
  3210  01E9  081A               	movf	26,w	;volatile
  3211  01EA  00F2               	movwf	??_LED_Get_DutyCycle
  3212  01EB  3006               	movlw	6
  3213  01EC                     u53_25:	
  3214  01EC  36F2               	lsrf	??_LED_Get_DutyCycle,f
  3215  01ED  0B89               	decfsz	9,f
  3216  01EE  29EC               	goto	u53_25
  3217  01EF  0872               	movf	??_LED_Get_DutyCycle,w
  3218  01F0  00F3               	movwf	??_LED_Get_DutyCycle+1
  3219  01F1  01F4               	clrf	??_LED_Get_DutyCycle+2
  3220  01F2  081B               	movf	27,w	;volatile
  3221  01F3  2A0D               	goto	L15
  3222  01F4                     i1l1035:	
  3223                           ;leds.c: 110: case 0x2:
  3224                           
  3225                           ;leds.c: 109: break;
  3226                           
  3227                           
  3228                           ;leds.c: 111: value = (((uint16_t)CCPR2L) << 2) + (uint16_t)((CCP2CON & 0x30) >> 4);
  3229  01F4  0025               	movlb	5	; select bank5
  3230  01F5  081A               	movf	26,w	;volatile
  3231  01F6  00F2               	movwf	??_LED_Get_DutyCycle
  3232  01F7  3004               	movlw	4
  3233  01F8                     u54_25:	
  3234  01F8  36F2               	lsrf	??_LED_Get_DutyCycle,f
  3235  01F9  0B89               	decfsz	9,f
  3236  01FA  29F8               	goto	u54_25
  3237  01FB  0872               	movf	??_LED_Get_DutyCycle,w
  3238  01FC  3903               	andlw	3
  3239  01FD                     L17:	
  3240  01FD  00F3               	movwf	??_LED_Get_DutyCycle+1
  3241  01FE  01F4               	clrf	??_LED_Get_DutyCycle+2
  3242  01FF  0818               	movf	24,w	;volatile
  3243  0200  2A0D               	goto	L15
  3244  0201                     i1l1037:	
  3245                           ;leds.c: 113: case 0x3:
  3246                           
  3247                           ;leds.c: 112: break;
  3248                           
  3249                           
  3250                           ;leds.c: 114: value = (((uint16_t)CCPR1L) << 2) + (uint16_t)((CCP1CON & 0x30) >> 4);
  3251  0201  0025               	movlb	5	; select bank5
  3252  0202  0813               	movf	19,w	;volatile
  3253  0203  00F2               	movwf	??_LED_Get_DutyCycle
  3254  0204  3004               	movlw	4
  3255  0205                     u55_25:	
  3256  0205  36F2               	lsrf	??_LED_Get_DutyCycle,f
  3257  0206  0B89               	decfsz	9,f
  3258  0207  2A05               	goto	u55_25
  3259  0208  0872               	movf	??_LED_Get_DutyCycle,w
  3260  0209  3903               	andlw	3
  3261  020A  00F3               	movwf	??_LED_Get_DutyCycle+1
  3262  020B  01F4               	clrf	??_LED_Get_DutyCycle+2
  3263  020C  0811               	movf	17,w	;volatile
  3264  020D                     L15:	
  3265  020D  00F5               	movwf	??_LED_Get_DutyCycle+3
  3266  020E  01F6               	clrf	??_LED_Get_DutyCycle+4
  3267  020F  35F5               	lslf	??_LED_Get_DutyCycle+3,f
  3268  0210  0DF6               	rlf	??_LED_Get_DutyCycle+4,f
  3269  0211  35F5               	lslf	??_LED_Get_DutyCycle+3,f
  3270  0212  0DF6               	rlf	??_LED_Get_DutyCycle+4,f
  3271  0213  0873               	movf	??_LED_Get_DutyCycle+1,w
  3272  0214  0775               	addwf	??_LED_Get_DutyCycle+3,w
  3273  0215  00F7               	movwf	??_LED_Get_DutyCycle+5
  3274  0216  0874               	movf	??_LED_Get_DutyCycle+2,w
  3275  0217  3D76               	addwfc	??_LED_Get_DutyCycle+4,w
  3276  0218  00F8               	movwf	??_LED_Get_DutyCycle+6
  3277  0219  0877               	movf	??_LED_Get_DutyCycle+5,w
  3278  021A  0020               	movlb	0	; select bank0
  3279  021B  00E0               	movwf	LED_Get_DutyCycle@value
  3280  021C  0878               	movf	??_LED_Get_DutyCycle+6,w
  3281  021D  2A22               	goto	L16
  3282  021E                     i1l1039:	
  3283                           ;leds.c: 116: default:
  3284                           
  3285                           ;leds.c: 115: break;
  3286                           
  3287                           
  3288                           ;leds.c: 117: value = 0xDEAD;
  3289  021E  30AD               	movlw	173
  3290  021F  0020               	movlb	0	; select bank0
  3291  0220  00E0               	movwf	LED_Get_DutyCycle@value
  3292  0221  30DE               	movlw	222
  3293  0222                     L16:	
  3294  0222  00E1               	movwf	LED_Get_DutyCycle@value+1
  3295                           
  3296                           ;leds.c: 119: }
  3297                           
  3298                           ;leds.c: 118: break;
  3299  0223  2A32               	goto	i1l1045
  3300  0224                     i1l1043:	
  3301  0224  0879               	movf	LED_Get_DutyCycle@led,w
  3302                           
  3303                           ; Switch size 1, requested type "space"
  3304                           ; Number of cases is 4, Range of values is 0 to 3
  3305                           ; switch strategies available:
  3306                           ; Name         Instructions Cycles
  3307                           ; simple_byte           13     7 (average)
  3308                           ; direct_byte           14     6 (fixed)
  3309                           ; jumptable            260     6 (fixed)
  3310                           ;	Chosen strategy is simple_byte
  3311  0225  3A00               	xorlw	0	; case 0
  3312  0226  1903               	skipnz
  3313  0227  29DF               	goto	i1l1031
  3314  0228  3A01               	xorlw	1	; case 1
  3315  0229  1903               	skipnz
  3316  022A  29E8               	goto	i1l1033
  3317  022B  3A03               	xorlw	3	; case 2
  3318  022C  1903               	skipnz
  3319  022D  29F4               	goto	i1l1035
  3320  022E  3A01               	xorlw	1	; case 3
  3321  022F  1903               	skipnz
  3322  0230  2A01               	goto	i1l1037
  3323  0231  2A1E               	goto	i1l1039
  3324  0232                     i1l1045:	
  3325                           
  3326                           ;leds.c: 120: return value;
  3327  0232  0020               	movlb	0	; select bank0
  3328  0233  0861               	movf	LED_Get_DutyCycle@value+1,w
  3329  0234  00F1               	movwf	?_LED_Get_DutyCycle+1
  3330  0235  0860               	movf	LED_Get_DutyCycle@value,w
  3331  0236  00F0               	movwf	?_LED_Get_DutyCycle
  3332  0237  0008               	return
  3333  0238                     __end_of_LED_Get_DutyCycle:	
  3334                           
  3335                           	psect	text11
  3336  0262                     __ptext11:	
  3337 ;; *************** function _IREF_SetOutput *****************
  3338 ;; Defined at:
  3339 ;;		line 55 in file "iref.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  dac_unit        1    wreg     unsigned char 
  3342 ;;  value           2    0[COMMON] unsigned int 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  dac_unit        1    2[COMMON] unsigned char 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  1    wreg      void 
  3347 ;; Registers used:
  3348 ;;		wreg, status,2, status,0
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3354 ;;      Params:         2       0       0       0       0       0       0       0
  3355 ;;      Locals:         1       0       0       0       0       0       0       0
  3356 ;;      Temps:          0       0       0       0       0       0       0       0
  3357 ;;      Totals:         3       0       0       0       0       0       0       0
  3358 ;;Total ram usage:        3 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; This function calls:
  3361 ;;		Nothing
  3362 ;; This function is called by:
  3363 ;;		_I2C_Process
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366                           
  3367                           
  3368                           ;psect for function _IREF_SetOutput
  3369  0262                     _IREF_SetOutput:	
  3370                           
  3371                           ;incstack = 0
  3372                           ; Regs used in _IREF_SetOutput: [wreg+status,2+status,0]
  3373                           ;IREF_SetOutput@dac_unit stored from wreg
  3374  0262  00F2               	movwf	IREF_SetOutput@dac_unit
  3375                           
  3376                           ;iref.c: 56: if (dac_unit == 0x1) {
  3377  0263  0372               	decf	IREF_SetOutput@dac_unit,w
  3378  0264  1D03               	btfss	3,2
  3379  0265  2A75               	goto	i1l985
  3380                           
  3381                           ;iref.c: 57: if (value > 0x00FF) {
  3382  0266  3001               	movlw	1
  3383  0267  0271               	subwf	IREF_SetOutput@value+1,w
  3384  0268  3000               	movlw	0
  3385  0269  1903               	skipnz
  3386  026A  0270               	subwf	IREF_SetOutput@value,w
  3387  026B  1C03               	skipc
  3388  026C  2A71               	goto	i1l274
  3389                           
  3390                           ;iref.c: 58: value = 0x00FF;
  3391  026D  30FF               	movlw	255
  3392  026E  00F0               	movwf	IREF_SetOutput@value
  3393  026F  3000               	movlw	0
  3394  0270  00F1               	movwf	IREF_SetOutput@value+1
  3395  0271                     i1l274:	
  3396                           
  3397                           ;iref.c: 59: }
  3398                           ;iref.c: 60: DAC1CON1 = (uint8_t)value;
  3399  0271  0870               	movf	IREF_SetOutput@value,w
  3400  0272  0022               	movlb	2	; select bank2
  3401  0273  0099               	movwf	25	;volatile
  3402                           
  3403                           ;iref.c: 61: } else if (dac_unit == 0x2) {
  3404  0274  0008               	return
  3405  0275                     i1l985:	
  3406  0275  3002               	movlw	2
  3407  0276  0672               	xorwf	IREF_SetOutput@dac_unit,w
  3408  0277  1D03               	btfss	3,2
  3409  0278  0008               	return
  3410                           
  3411                           ;iref.c: 62: if (value > 0x001F) {
  3412  0279  3000               	movlw	0
  3413  027A  0271               	subwf	IREF_SetOutput@value+1,w
  3414  027B  3020               	movlw	32
  3415  027C  1903               	skipnz
  3416  027D  0270               	subwf	IREF_SetOutput@value,w
  3417  027E  1C03               	skipc
  3418  027F  2A84               	goto	i1l277
  3419                           
  3420                           ;iref.c: 63: value = 0x001F;
  3421  0280  301F               	movlw	31
  3422  0281  00F0               	movwf	IREF_SetOutput@value
  3423  0282  3000               	movlw	0
  3424  0283  00F1               	movwf	IREF_SetOutput@value+1
  3425  0284                     i1l277:	
  3426                           
  3427                           ;iref.c: 64: }
  3428                           ;iref.c: 65: DAC2CON1 = (uint8_t)value;
  3429  0284  0870               	movf	IREF_SetOutput@value,w
  3430  0285  0022               	movlb	2	; select bank2
  3431  0286  009B               	movwf	27	;volatile
  3432  0287  0008               	return
  3433  0288                     __end_of_IREF_SetOutput:	
  3434                           
  3435                           	psect	text12
  3436  02AA                     __ptext12:	
  3437 ;; *************** function _ADC_ProcessCapture *****************
  3438 ;; Defined at:
  3439 ;;		line 55 in file "adc.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  address         1    wreg     unsigned char 
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;  address         1    3[COMMON] unsigned char 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  2    0[COMMON] unsigned int 
  3446 ;; Registers used:
  3447 ;;		wreg, status,2, status,0
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3453 ;;      Params:         2       0       0       0       0       0       0       0
  3454 ;;      Locals:         1       0       0       0       0       0       0       0
  3455 ;;      Temps:          1       0       0       0       0       0       0       0
  3456 ;;      Totals:         4       0       0       0       0       0       0       0
  3457 ;;Total ram usage:        4 bytes
  3458 ;; Hardware stack levels used:    1
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		_I2C_Process
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           
  3467                           ;psect for function _ADC_ProcessCapture
  3468  02AA                     _ADC_ProcessCapture:	
  3469                           
  3470                           ;incstack = 0
  3471                           ; Regs used in _ADC_ProcessCapture: [wreg+status,2+status,0]
  3472                           ;ADC_ProcessCapture@address stored from wreg
  3473  02AA  00F3               	movwf	ADC_ProcessCapture@address
  3474                           
  3475                           ;adc.c: 57: ADCON0bits.CHS = (uint8_t)(address & 0x1F);
  3476  02AB  0873               	movf	ADC_ProcessCapture@address,w
  3477  02AC  391F               	andlw	31
  3478  02AD  00F2               	movwf	??_ADC_ProcessCapture
  3479  02AE  0DF2               	rlf	??_ADC_ProcessCapture,f
  3480  02AF  0DF2               	rlf	??_ADC_ProcessCapture,f
  3481  02B0  0021               	movlb	1	; select bank1
  3482  02B1  081D               	movf	29,w	;volatile
  3483  02B2  0672               	xorwf	??_ADC_ProcessCapture,w
  3484  02B3  3983               	andlw	-125
  3485  02B4  0672               	xorwf	??_ADC_ProcessCapture,w
  3486  02B5  009D               	movwf	29	;volatile
  3487                           
  3488                           ;adc.c: 59: ADCON0bits.ADON = 1;
  3489  02B6  141D               	bsf	29,0	;volatile
  3490                           
  3491                           ;adc.c: 61: _delay((unsigned long)((200)*(8000000/4000000.0)));
  3492  02B7  3085               	movlw	133
  3493  02B8                     u82_27:	
  3494  02B8  0B89               	decfsz	9,f
  3495  02B9  2AB8               	goto	u82_27
  3496  02BA  0000               	nop
  3497                           
  3498                           ;adc.c: 63: ADCON0bits.GO_nDONE = 1;
  3499  02BB  0021               	movlb	1	; select bank1
  3500  02BC  149D               	bsf	29,1	;volatile
  3501  02BD                     i1l300:	
  3502                           ;adc.c: 64: while (ADCON0bits.GO_nDONE){
  3503                           
  3504  02BD  189D               	btfsc	29,1	;volatile
  3505  02BE  2ABD               	goto	i1l300
  3506                           
  3507                           ;adc.c: 66: }
  3508                           ;adc.c: 68: return (uint16_t)((ADRESH << 8) + ADRESL);
  3509  02BF  081C               	movf	28,w	;volatile
  3510  02C0  00F1               	movwf	?_ADC_ProcessCapture+1
  3511  02C1  081B               	movf	27,w	;volatile
  3512  02C2  00F0               	movwf	?_ADC_ProcessCapture
  3513  02C3  0008               	return
  3514  02C4                     __end_of_ADC_ProcessCapture:	
  3515  007E                     btemp	set	126	;btemp
  3516  007E                     int$flags	set	126
  3517  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         72
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      6      78
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _InterruptHandler in COMMON

    _I2C_InterruptHandler->_I2C_Process
    _I2C_Process->__get_significant
    __get_significant->_LED_Get_DutyCycle

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandler in BANK0

    _InterruptHandler->_I2C_InterruptHandler
    _I2C_InterruptHandler->_I2C_Process

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptHandler in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _ADC_Init
                           _I2C_Init
                          _IREF_Init
                           _LED_Init
 ---------------------------------------------------------------------------------
 (1) _LED_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IREF_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _InterruptHandler                                     1     1      0    1242
                                              5 BANK0      1     1      0
               _I2C_InterruptHandler
 ---------------------------------------------------------------------------------
 (3) _I2C_InterruptHandler                                 2     2      0    1242
                                              3 BANK0      2     2      0
                        _I2C_Process
 ---------------------------------------------------------------------------------
 (4) _I2C_Process                                          4     4      0    1218
                                             13 COMMON     1     1      0
                                              0 BANK0      3     3      0
                 _ADC_ProcessCapture
                     _IREF_SetOutput
                  _LED_Get_DutyCycle
                  _LED_Set_DutyCycle
                   __get_significant
 ---------------------------------------------------------------------------------
 (5) __get_significant                                     3     0      3     668
                                             10 COMMON     3     0      3
                  _LED_Get_DutyCycle (ARG)
 ---------------------------------------------------------------------------------
 (5) _LED_Set_DutyCycle                                    5     3      2     264
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (5) _LED_Get_DutyCycle                                   10     8      2      22
                                              0 COMMON    10     8      2
 ---------------------------------------------------------------------------------
 (5) _IREF_SetOutput                                       3     1      2     220
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (5) _ADC_ProcessCapture                                   4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _I2C_Init
   _IREF_Init
   _LED_Init

 _InterruptHandler (ROOT)
   _I2C_InterruptHandler
     _I2C_Process
       _ADC_ProcessCapture
       _IREF_SetOutput
       _LED_Get_DutyCycle
       _LED_Set_DutyCycle
       __get_significant
         _LED_Get_DutyCycle (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      6      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      5C      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Apr  4 23:28:10 2018

          ??_ADC_ProcessCapture 0072                     __CFG_CP$OFF 0000                              l83 01C9  
                            l86 01DC                     __CFG_LVP$ON 0000                             _PR2 001B  
               I2C_Process@data 0062                    __CFG_BORV$LO 0000                             wreg 0009  
                  __CFG_IESO$ON 0000            __size_of_I2C_Process 00E4                            _LATA 010C  
                          _LATB 010D                            _LATC 010E                            i1l96 0013  
                          _PLLR 04D6                            _TMR2 001A                            _WPUA 020C  
                          _WPUB 020D                            _WPUC 020E                            _WPUE 0210  
                  __CFG_WRT$OFF 0000                   __CFG_FCMEN$ON 0000                            _main 017F  
              __end_of_I2C_Init 02E3                            fsr0h 0005                            indf0 0000  
                          fsr0l 0004                            btemp 007E                __end_of_ADC_Init 02EC  
                 __CFG_BOREN$ON 0000                            start 0018              __size_of_IREF_Init 0011  
                 __CFG_MCLRE$ON 0000                   __CFG_PLLEN$ON 0000                __end_of_LED_Init 0262  
       __size_of_IREF_SetOutput 0026                           ?_main 0070                   __CFG_WDTE$OFF 0000  
                         _T2CON 001C                           i1l300 02BD                           i1l142 029B  
                         i1l160 0027                           i1l241 017E                           i1l180 00AF  
                         i1l190 0108                           i1l274 0271                           i1l277 0284  
                         i1l985 0275                           i1l995 0116                           i1l997 012C  
                         i1l999 0142                           u52_25 01E3                           u61_20 007C  
                         u53_25 01EC                           u62_20 007D                           u54_25 01F8  
                         u46_25 0125                           u71_20 00F5                           u55_25 0205  
                         u47_25 013B                           u72_20 00F6                           u48_25 0151  
                         _TRISA 008C                           _TRISB 008D                           u49_25 0168  
                         _TRISC 008E                           _TRISE 0090                           u82_27 02B8  
          LED_Get_DutyCycle@led 0079            LED_Set_DutyCycle@led 0074                           status 0003  
                         wtemp0 007E                 __initialization 001A                    __end_of_main 01DD  
                __CFG_LPBOR$OFF 0000                          ??_main 0000               __end_of_IREF_Init 02D5  
                        _ADCON0 009D                          _ADCON1 009E                          _ADCON2 009F  
                        _ADRESH 009C                          _ADRESL 009B                          _CCPR2H 0299  
                        _CCPR1L 0291                          _CCPR2L 0298                  __CFG_ZCDDIS$ON 0000  
                        _ANSELA 018C                          _ANSELB 018D                          _ANSELC 018E  
                        _BORCON 0116                          i1l1001 0159                          i1l1003 0170  
                        i1l1013 02F1                          i1l1031 01DF                          i1l1103 00CE  
                        i1l1033 01E8                          i1l1113 00FA                          i1l1035 01F4  
                        i1l1043 0224                          i1l1051 002B                          i1l1037 0201  
                        i1l1045 0232                          i1l1109 00E1                          i1l1039 021E  
                        i1l1063 0056                          i1l1055 0032                          i1l1081 008C  
                        i1l1073 0076                          i1l1067 0064                          i1l1059 003D  
                        i1l1085 0094                          i1l1077 0081                          i1l1095 00B4  
                        i1l1079 008A                          i1l1089 009E                          _ODCONA 028C  
                        _ODCONB 028D                          i1l1099 00BC                          i1l1195 0299  
                        _ODCONC 028E                          i1l1199 029F                          _FVRCON 0117  
                        _OSCCON 0099                          _WDTCON 0097                  __CFG_PWRTE$OFF 0000  
                __CFG_STVREN$ON 0000              I2C_Process@address 0066                       ?_I2C_Init 0070  
                     ?_ADC_Init 0070       __get_significant@LSB_nMSB 007C         __end_of__initialization 0021  
             ?__get_significant 007A                       ?_LED_Init 0070              ??__get_significant 007D  
 __size_of_I2C_InterruptHandler 0022          IREF_SetOutput@dac_unit 0072                  __pcstackCOMMON 0070  
                _IREF_SetOutput 0262       __size_of_InterruptHandler 0014                      ??_I2C_Init 0000  
                _OPTION_REGbits 0095                      ??_ADC_Init 0000                      __pbssBANK0 0020  
      I2C_Process@i2c_bus_state 007D                      ??_LED_Init 0000                      __pmaintext 017F  
           I2C_Process@LSB_nMSB 0064                 __CFG_PPS1WAY$ON 0000          __end_of_IREF_SetOutput 0288  
                    __pintentry 0004     __size_of_ADC_ProcessCapture 001A                         _CCP1CON 0293  
                       _CCP2CON 029A                   ??_I2C_Process 0068                         _OPA1CON 0511  
                       _OPA2CON 0515                         _OSCTUNE 0098                         _PWM3DCH 0618  
                       _PWM3DCL 0617                         _PWM4DCH 061B                         _PWM4DCL 061A  
                       _PWM3CON 0619                         _PWM4CON 061C                         _SSP1ADD 0212  
                       _SSP1BUF 0211                       _I2C_wData 0067                 ?_IREF_SetOutput 0070  
             _LED_Set_DutyCycle 0109             IREF_SetOutput@value 0070              ?_LED_Set_DutyCycle 0070  
                       __ptext1 0238                         __ptext2 02C4                         __ptext3 02D5  
                       __ptext4 02E3                         __ptext6 0288                         __ptext7 0025  
                       __ptext8 02EC                         __ptext9 0109             ??_LED_Set_DutyCycle 0072  
I2C_InterruptHandler@I2C_buffer 006C                         clrloop0 02F4             __end_of_I2C_Process 0109  
          end_of_initialization 0021                       _IREF_Init 02C4       __end_of_LED_Set_DutyCycle 017F  
        LED_Get_DutyCycle@value 0060                _InterruptHandler 0004                __CFG_FOSC$INTOSC 0000  
             __size_of_I2C_Init 000E               __size_of_ADC_Init 0009                      ?_IREF_Init 0070  
             __size_of_LED_Init 002A       __size_of__get_significant 0007    __end_of_I2C_InterruptHandler 02AA  
                   _I2C_Process 0025             start_initialization 001A               _LED_Get_DutyCycle 01DD  
    __size_of_LED_Set_DutyCycle 0076              ?_LED_Get_DutyCycle 0070                     _CCPTMRSbits 029E  
           ??_LED_Get_DutyCycle 0072                       ___latbits 0001                   __pcstackBANK0 0068  
                 __pcstackBANK1 0000                     ??_IREF_Init 0000       __end_of_LED_Get_DutyCycle 0238  
              ??_IREF_SetOutput 0072      __end_of_ADC_ProcessCapture 02C4                        _DAC1CON0 0118  
                      _DAC1CON1 0119                        _DAC2CON0 011A                        _DAC2CON1 011B  
                      _I2C_Init 02D5                        _ADC_Init 02E3        __end_of_InterruptHandler 0018  
                      _LED_Init 0238                       clear_ram0 02F3                        _PIE1bits 0091  
          _I2C_InterruptHandler 0288                        _PIR1bits 0011                        _SENS_VAL 0020  
     ADC_ProcessCapture@address 0073                        _SSP1CON1 0215                        _SSP1CON2 0216  
                      _SSP1CON3 0217                        _SSP1STAT 0214                __get_significant 02EC  
                    _ADCON0bits 009D      __size_of_LED_Get_DutyCycle 005B           ?_I2C_InterruptHandler 0070  
                  ?_I2C_Process 0070                        __ptext10 01DD                        __ptext11 0262  
                      __ptext12 02AA                    _SSP1CON1bits 0215                    _SSP1CON2bits 0216  
    LED_Set_DutyCycle@dutycycle 0070          __get_significant@value 007A                   __size_of_main 005E  
                 _SSPDATPPSbits 0E21                      _RB0PPSbits 0E98                      _RC0PPSbits 0EA0  
                    _RC1PPSbits 0EA1                      _RC2PPSbits 0EA2                      _RC3PPSbits 0EA3  
                    _RC4PPSbits 0EA4                   _SSPCLKPPSbits 0E20                        int$flags 007E  
                  _SSP1STATbits 0214                      _INTCONbits 000B                        intlevel1 0000  
        ??_I2C_InterruptHandler 006B               __CFG_CLKOUTEN$OFF 0000              _ADC_ProcessCapture 02AA  
           ?_ADC_ProcessCapture 0070            I2C_Process@writeType 0065        __end_of__get_significant 02F3  
             ?_InterruptHandler 0070              ??_InterruptHandler 006D  
